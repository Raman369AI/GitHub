{"ast":null,"code":"import { isFocusable, isTabbable } from './tabbable.mjs';\nconst focusableElList = [\"input:not(:disabled):not([disabled])\", \"select:not(:disabled):not([disabled])\", \"textarea:not(:disabled):not([disabled])\", \"embed\", \"iframe\", \"object\", \"a[href]\", \"area[href]\", \"button:not(:disabled):not([disabled])\", \"[tabindex]\", \"audio[controls]\", \"video[controls]\", \"*[tabindex]:not([aria-disabled])\", \"*[contenteditable]\"];\nconst focusableElSelector = focusableElList.join();\nconst isVisible = el => el.offsetWidth > 0 && el.offsetHeight > 0;\nfunction getAllFocusable(container) {\n  const focusableEls = Array.from(container.querySelectorAll(focusableElSelector));\n  focusableEls.unshift(container);\n  return focusableEls.filter(el => isFocusable(el) && isVisible(el));\n}\nfunction getFirstFocusable(container) {\n  const allFocusable = getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nfunction getAllTabbable(container, fallbackToFocusable) {\n  const allFocusable = Array.from(container.querySelectorAll(focusableElSelector));\n  const allTabbable = allFocusable.filter(isTabbable);\n  if (isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n  return allTabbable;\n}\nfunction getFirstTabbableIn(container, fallbackToFocusable) {\n  const [first] = getAllTabbable(container, fallbackToFocusable);\n  return first || null;\n}\nfunction getLastTabbableIn(container, fallbackToFocusable) {\n  const allTabbable = getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nfunction getNextTabbable(container, fallbackToFocusable) {\n  const allFocusable = getAllFocusable(container);\n  const index = allFocusable.indexOf(document.activeElement);\n  const slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction getPreviousTabbable(container, fallbackToFocusable) {\n  const allFocusable = getAllFocusable(container).reverse();\n  const index = allFocusable.indexOf(document.activeElement);\n  const slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nexport { getAllFocusable, getAllTabbable, getFirstFocusable, getFirstTabbableIn, getLastTabbableIn, getNextTabbable, getPreviousTabbable };","map":{"version":3,"names":["isFocusable","isTabbable","focusableElList","focusableElSelector","join","isVisible","el","offsetWidth","offsetHeight","getAllFocusable","container","focusableEls","Array","from","querySelectorAll","unshift","filter","getFirstFocusable","allFocusable","length","getAllTabbable","fallbackToFocusable","allTabbable","getFirstTabbableIn","first","getLastTabbableIn","getNextTabbable","index","indexOf","document","activeElement","slice","find","getPreviousTabbable","reverse"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/utils/dist/esm/focusable.mjs"],"sourcesContent":["import { isFocusable, isTabbable } from './tabbable.mjs';\n\nconst focusableElList = [\n  \"input:not(:disabled):not([disabled])\",\n  \"select:not(:disabled):not([disabled])\",\n  \"textarea:not(:disabled):not([disabled])\",\n  \"embed\",\n  \"iframe\",\n  \"object\",\n  \"a[href]\",\n  \"area[href]\",\n  \"button:not(:disabled):not([disabled])\",\n  \"[tabindex]\",\n  \"audio[controls]\",\n  \"video[controls]\",\n  \"*[tabindex]:not([aria-disabled])\",\n  \"*[contenteditable]\"\n];\nconst focusableElSelector = focusableElList.join();\nconst isVisible = (el) => el.offsetWidth > 0 && el.offsetHeight > 0;\nfunction getAllFocusable(container) {\n  const focusableEls = Array.from(\n    container.querySelectorAll(focusableElSelector)\n  );\n  focusableEls.unshift(container);\n  return focusableEls.filter((el) => isFocusable(el) && isVisible(el));\n}\nfunction getFirstFocusable(container) {\n  const allFocusable = getAllFocusable(container);\n  return allFocusable.length ? allFocusable[0] : null;\n}\nfunction getAllTabbable(container, fallbackToFocusable) {\n  const allFocusable = Array.from(\n    container.querySelectorAll(focusableElSelector)\n  );\n  const allTabbable = allFocusable.filter(isTabbable);\n  if (isTabbable(container)) {\n    allTabbable.unshift(container);\n  }\n  if (!allTabbable.length && fallbackToFocusable) {\n    return allFocusable;\n  }\n  return allTabbable;\n}\nfunction getFirstTabbableIn(container, fallbackToFocusable) {\n  const [first] = getAllTabbable(container, fallbackToFocusable);\n  return first || null;\n}\nfunction getLastTabbableIn(container, fallbackToFocusable) {\n  const allTabbable = getAllTabbable(container, fallbackToFocusable);\n  return allTabbable[allTabbable.length - 1] || null;\n}\nfunction getNextTabbable(container, fallbackToFocusable) {\n  const allFocusable = getAllFocusable(container);\n  const index = allFocusable.indexOf(document.activeElement);\n  const slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\nfunction getPreviousTabbable(container, fallbackToFocusable) {\n  const allFocusable = getAllFocusable(container).reverse();\n  const index = allFocusable.indexOf(document.activeElement);\n  const slice = allFocusable.slice(index + 1);\n  return slice.find(isTabbable) || allFocusable.find(isTabbable) || (fallbackToFocusable ? slice[0] : null);\n}\n\nexport { getAllFocusable, getAllTabbable, getFirstFocusable, getFirstTabbableIn, getLastTabbableIn, getNextTabbable, getPreviousTabbable };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}