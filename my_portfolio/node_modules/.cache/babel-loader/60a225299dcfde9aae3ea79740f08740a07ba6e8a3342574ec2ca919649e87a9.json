{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useMenuStyles } from './menu.mjs';\nimport { useMenuButton } from './use-menu.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst StyledMenuButton = forwardRef((props, ref) => {\n  const styles = useMenuStyles();\n  return /* @__PURE__ */jsx(chakra.button, {\n    ref,\n    ...props,\n    __css: {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      outline: 0,\n      ...styles.button\n    }\n  });\n});\nconst MenuButton = forwardRef((props, ref) => {\n  const {\n    children,\n    as: As,\n    ...rest\n  } = props;\n  const buttonProps = useMenuButton(rest, ref);\n  const Element = As || StyledMenuButton;\n  return /* @__PURE__ */jsx(Element, {\n    ...buttonProps,\n    className: cx(\"chakra-menu__menu-button\", props.className),\n    children: /* @__PURE__ */jsx(chakra.span, {\n      __css: {\n        pointerEvents: \"none\",\n        flex: \"1 1 auto\",\n        minW: 0\n      },\n      children: props.children\n    })\n  });\n});\nMenuButton.displayName = \"MenuButton\";\nexport { MenuButton };","map":{"version":3,"names":["jsx","cx","useMenuStyles","useMenuButton","forwardRef","chakra","StyledMenuButton","props","ref","styles","button","__css","display","appearance","alignItems","outline","MenuButton","children","as","As","rest","buttonProps","Element","className","span","pointerEvents","flex","minW","displayName"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/menu/menu-button.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useMenuStyles } from './menu.mjs';\nimport { useMenuButton } from './use-menu.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst StyledMenuButton = forwardRef((props, ref) => {\n  const styles = useMenuStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.button,\n    {\n      ref,\n      ...props,\n      __css: {\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        ...styles.button\n      }\n    }\n  );\n});\nconst MenuButton = forwardRef(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props;\n    const buttonProps = useMenuButton(rest, ref);\n    const Element = As || StyledMenuButton;\n    return /* @__PURE__ */ jsx(\n      Element,\n      {\n        ...buttonProps,\n        className: cx(\"chakra-menu__menu-button\", props.className),\n        children: /* @__PURE__ */ jsx(\n          chakra.span,\n          {\n            __css: { pointerEvents: \"none\", flex: \"1 1 auto\", minW: 0 },\n            children: props.children\n          }\n        )\n      }\n    );\n  }\n);\nMenuButton.displayName = \"MenuButton\";\n\nexport { MenuButton };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,aAAa,QAAQ,YAAY;AAC1C,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,MAAMC,gBAAgB,GAAGF,UAAU,CAAC,CAACG,KAAK,EAAEC,GAAG,KAAK;EAClD,MAAMC,MAAM,GAAGP,aAAa,CAAC,CAAC;EAC9B,OAAO,eAAgBF,GAAG,CACxBK,MAAM,CAACK,MAAM,EACb;IACEF,GAAG;IACH,GAAGD,KAAK;IACRI,KAAK,EAAE;MACLC,OAAO,EAAE,aAAa;MACtBC,UAAU,EAAE,MAAM;MAClBC,UAAU,EAAE,QAAQ;MACpBC,OAAO,EAAE,CAAC;MACV,GAAGN,MAAM,CAACC;IACZ;EACF,CACF,CAAC;AACH,CAAC,CAAC;AACF,MAAMM,UAAU,GAAGZ,UAAU,CAC3B,CAACG,KAAK,EAAEC,GAAG,KAAK;EACd,MAAM;IAAES,QAAQ;IAAEC,EAAE,EAAEC,EAAE;IAAE,GAAGC;EAAK,CAAC,GAAGb,KAAK;EAC3C,MAAMc,WAAW,GAAGlB,aAAa,CAACiB,IAAI,EAAEZ,GAAG,CAAC;EAC5C,MAAMc,OAAO,GAAGH,EAAE,IAAIb,gBAAgB;EACtC,OAAO,eAAgBN,GAAG,CACxBsB,OAAO,EACP;IACE,GAAGD,WAAW;IACdE,SAAS,EAAEtB,EAAE,CAAC,0BAA0B,EAAEM,KAAK,CAACgB,SAAS,CAAC;IAC1DN,QAAQ,EAAE,eAAgBjB,GAAG,CAC3BK,MAAM,CAACmB,IAAI,EACX;MACEb,KAAK,EAAE;QAAEc,aAAa,EAAE,MAAM;QAAEC,IAAI,EAAE,UAAU;QAAEC,IAAI,EAAE;MAAE,CAAC;MAC3DV,QAAQ,EAAEV,KAAK,CAACU;IAClB,CACF;EACF,CACF,CAAC;AACH,CACF,CAAC;AACDD,UAAU,CAACY,WAAW,GAAG,YAAY;AAErC,SAASZ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}