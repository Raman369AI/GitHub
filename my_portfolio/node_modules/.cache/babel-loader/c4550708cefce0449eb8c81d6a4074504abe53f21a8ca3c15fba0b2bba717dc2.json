{"ast":null,"code":"'use client';\n\nimport { clampValue, toPrecision, countDecimalPlaces } from '@chakra-ui/utils';\nimport { useState, useCallback } from 'react';\nimport { useCallbackRef } from './use-callback-ref.mjs';\nfunction useCounter(props = {}) {\n  const {\n    onChange,\n    precision: precisionProp,\n    defaultValue,\n    value: valueProp,\n    step: stepProp = 1,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    keepWithinRange = true\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [valueState, setValue] = useState(() => {\n    if (defaultValue == null) return \"\";\n    return cast(defaultValue, stepProp, precisionProp) ?? \"\";\n  });\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const decimalPlaces = getDecimalPlaces(parse(value), stepProp);\n  const precision = precisionProp ?? decimalPlaces;\n  const update = useCallback(next => {\n    if (next === value) return;\n    if (!isControlled) {\n      setValue(next.toString());\n    }\n    onChangeProp?.(next.toString(), parse(next));\n  }, [onChangeProp, isControlled, value]);\n  const clamp = useCallback(value2 => {\n    let nextValue = value2;\n    if (keepWithinRange) {\n      nextValue = clampValue(nextValue, min, max);\n    }\n    return toPrecision(nextValue, precision);\n  }, [precision, keepWithinRange, max, min]);\n  const increment = useCallback((step = stepProp) => {\n    let next;\n    if (value === \"\") {\n      next = parse(step);\n    } else {\n      next = parse(value) + step;\n    }\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  const decrement = useCallback((step = stepProp) => {\n    let next;\n    if (value === \"\") {\n      next = parse(-step);\n    } else {\n      next = parse(value) - step;\n    }\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  const reset = useCallback(() => {\n    let next;\n    if (defaultValue == null) {\n      next = \"\";\n    } else {\n      next = cast(defaultValue, stepProp, precisionProp) ?? min;\n    }\n    update(next);\n  }, [defaultValue, precisionProp, stepProp, update, min]);\n  const castValue = useCallback(value2 => {\n    const nextValue = cast(value2, stepProp, precision) ?? min;\n    update(nextValue);\n  }, [precision, stepProp, update, min]);\n  const valueAsNumber = parse(value);\n  const isOutOfRange = valueAsNumber > max || valueAsNumber < min;\n  const isAtMax = valueAsNumber === max;\n  const isAtMin = valueAsNumber === min;\n  return {\n    isOutOfRange,\n    isAtMax,\n    isAtMin,\n    precision,\n    value,\n    valueAsNumber,\n    update,\n    reset,\n    increment,\n    decrement,\n    clamp,\n    cast: castValue,\n    setValue\n  };\n}\nfunction parse(value) {\n  return parseFloat(value.toString().replace(/[^\\w.-]+/g, \"\"));\n}\nfunction getDecimalPlaces(value, step) {\n  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));\n}\nfunction cast(value, step, precision) {\n  const parsedValue = parse(value);\n  if (Number.isNaN(parsedValue)) return void 0;\n  const decimalPlaces = getDecimalPlaces(parsedValue, step);\n  return toPrecision(parsedValue, precision ?? decimalPlaces);\n}\nexport { useCounter };","map":{"version":3,"names":["clampValue","toPrecision","countDecimalPlaces","useState","useCallback","useCallbackRef","useCounter","props","onChange","precision","precisionProp","defaultValue","value","valueProp","step","stepProp","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","keepWithinRange","onChangeProp","valueState","setValue","cast","isControlled","decimalPlaces","getDecimalPlaces","parse","update","next","toString","clamp","value2","nextValue","increment","decrement","reset","castValue","valueAsNumber","isOutOfRange","isAtMax","isAtMin","parseFloat","replace","Math","parsedValue","isNaN"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/hooks/dist/esm/use-counter.mjs"],"sourcesContent":["'use client';\nimport { clampValue, toPrecision, countDecimalPlaces } from '@chakra-ui/utils';\nimport { useState, useCallback } from 'react';\nimport { useCallbackRef } from './use-callback-ref.mjs';\n\nfunction useCounter(props = {}) {\n  const {\n    onChange,\n    precision: precisionProp,\n    defaultValue,\n    value: valueProp,\n    step: stepProp = 1,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    keepWithinRange = true\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [valueState, setValue] = useState(() => {\n    if (defaultValue == null)\n      return \"\";\n    return cast(defaultValue, stepProp, precisionProp) ?? \"\";\n  });\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const decimalPlaces = getDecimalPlaces(parse(value), stepProp);\n  const precision = precisionProp ?? decimalPlaces;\n  const update = useCallback(\n    (next) => {\n      if (next === value)\n        return;\n      if (!isControlled) {\n        setValue(next.toString());\n      }\n      onChangeProp?.(next.toString(), parse(next));\n    },\n    [onChangeProp, isControlled, value]\n  );\n  const clamp = useCallback(\n    (value2) => {\n      let nextValue = value2;\n      if (keepWithinRange) {\n        nextValue = clampValue(nextValue, min, max);\n      }\n      return toPrecision(nextValue, precision);\n    },\n    [precision, keepWithinRange, max, min]\n  );\n  const increment = useCallback(\n    (step = stepProp) => {\n      let next;\n      if (value === \"\") {\n        next = parse(step);\n      } else {\n        next = parse(value) + step;\n      }\n      next = clamp(next);\n      update(next);\n    },\n    [clamp, stepProp, update, value]\n  );\n  const decrement = useCallback(\n    (step = stepProp) => {\n      let next;\n      if (value === \"\") {\n        next = parse(-step);\n      } else {\n        next = parse(value) - step;\n      }\n      next = clamp(next);\n      update(next);\n    },\n    [clamp, stepProp, update, value]\n  );\n  const reset = useCallback(() => {\n    let next;\n    if (defaultValue == null) {\n      next = \"\";\n    } else {\n      next = cast(defaultValue, stepProp, precisionProp) ?? min;\n    }\n    update(next);\n  }, [defaultValue, precisionProp, stepProp, update, min]);\n  const castValue = useCallback(\n    (value2) => {\n      const nextValue = cast(value2, stepProp, precision) ?? min;\n      update(nextValue);\n    },\n    [precision, stepProp, update, min]\n  );\n  const valueAsNumber = parse(value);\n  const isOutOfRange = valueAsNumber > max || valueAsNumber < min;\n  const isAtMax = valueAsNumber === max;\n  const isAtMin = valueAsNumber === min;\n  return {\n    isOutOfRange,\n    isAtMax,\n    isAtMin,\n    precision,\n    value,\n    valueAsNumber,\n    update,\n    reset,\n    increment,\n    decrement,\n    clamp,\n    cast: castValue,\n    setValue\n  };\n}\nfunction parse(value) {\n  return parseFloat(value.toString().replace(/[^\\w.-]+/g, \"\"));\n}\nfunction getDecimalPlaces(value, step) {\n  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));\n}\nfunction cast(value, step, precision) {\n  const parsedValue = parse(value);\n  if (Number.isNaN(parsedValue))\n    return void 0;\n  const decimalPlaces = getDecimalPlaces(parsedValue, step);\n  return toPrecision(parsedValue, precision ?? decimalPlaces);\n}\n\nexport { useCounter };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}