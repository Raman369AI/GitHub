{"ast":null,"code":"import { isObject } from '@chakra-ui/utils';\nfunction toRef(operand) {\n  if (isObject(operand) && operand.reference) {\n    return operand.reference;\n  }\n  return String(operand);\n}\nconst toExpr = (operator, ...operands) => operands.map(toRef).join(` ${operator} `).replace(/calc/g, \"\");\nconst add = (...operands) => `calc(${toExpr(\"+\", ...operands)})`;\nconst subtract = (...operands) => `calc(${toExpr(\"-\", ...operands)})`;\nconst multiply = (...operands) => `calc(${toExpr(\"*\", ...operands)})`;\nconst divide = (...operands) => `calc(${toExpr(\"/\", ...operands)})`;\nconst negate = x => {\n  const value = toRef(x);\n  if (value != null && !Number.isNaN(parseFloat(value))) {\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : `-${value}`;\n  }\n  return multiply(value, -1);\n};\nconst calc = Object.assign(x => ({\n  add: (...operands) => calc(add(x, ...operands)),\n  subtract: (...operands) => calc(subtract(x, ...operands)),\n  multiply: (...operands) => calc(multiply(x, ...operands)),\n  divide: (...operands) => calc(divide(x, ...operands)),\n  negate: () => calc(negate(x)),\n  toString: () => x.toString()\n}), {\n  add,\n  subtract,\n  multiply,\n  divide,\n  negate\n});\nexport { calc };","map":{"version":3,"names":["isObject","toRef","operand","reference","String","toExpr","operator","operands","map","join","replace","add","subtract","multiply","divide","negate","x","value","Number","isNaN","parseFloat","startsWith","slice","calc","Object","assign","toString"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/theme-tools/dist/esm/css-calc.mjs"],"sourcesContent":["import { isObject } from '@chakra-ui/utils';\n\nfunction toRef(operand) {\n  if (isObject(operand) && operand.reference) {\n    return operand.reference;\n  }\n  return String(operand);\n}\nconst toExpr = (operator, ...operands) => operands.map(toRef).join(` ${operator} `).replace(/calc/g, \"\");\nconst add = (...operands) => `calc(${toExpr(\"+\", ...operands)})`;\nconst subtract = (...operands) => `calc(${toExpr(\"-\", ...operands)})`;\nconst multiply = (...operands) => `calc(${toExpr(\"*\", ...operands)})`;\nconst divide = (...operands) => `calc(${toExpr(\"/\", ...operands)})`;\nconst negate = (x) => {\n  const value = toRef(x);\n  if (value != null && !Number.isNaN(parseFloat(value))) {\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : `-${value}`;\n  }\n  return multiply(value, -1);\n};\nconst calc = Object.assign(\n  (x) => ({\n    add: (...operands) => calc(add(x, ...operands)),\n    subtract: (...operands) => calc(subtract(x, ...operands)),\n    multiply: (...operands) => calc(multiply(x, ...operands)),\n    divide: (...operands) => calc(divide(x, ...operands)),\n    negate: () => calc(negate(x)),\n    toString: () => x.toString()\n  }),\n  {\n    add,\n    subtract,\n    multiply,\n    divide,\n    negate\n  }\n);\n\nexport { calc };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAE3C,SAASC,KAAKA,CAACC,OAAO,EAAE;EACtB,IAAIF,QAAQ,CAACE,OAAO,CAAC,IAAIA,OAAO,CAACC,SAAS,EAAE;IAC1C,OAAOD,OAAO,CAACC,SAAS;EAC1B;EACA,OAAOC,MAAM,CAACF,OAAO,CAAC;AACxB;AACA,MAAMG,MAAM,GAAGA,CAACC,QAAQ,EAAE,GAAGC,QAAQ,KAAKA,QAAQ,CAACC,GAAG,CAACP,KAAK,CAAC,CAACQ,IAAI,CAAC,IAAIH,QAAQ,GAAG,CAAC,CAACI,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;AACxG,MAAMC,GAAG,GAAGA,CAAC,GAAGJ,QAAQ,KAAK,QAAQF,MAAM,CAAC,GAAG,EAAE,GAAGE,QAAQ,CAAC,GAAG;AAChE,MAAMK,QAAQ,GAAGA,CAAC,GAAGL,QAAQ,KAAK,QAAQF,MAAM,CAAC,GAAG,EAAE,GAAGE,QAAQ,CAAC,GAAG;AACrE,MAAMM,QAAQ,GAAGA,CAAC,GAAGN,QAAQ,KAAK,QAAQF,MAAM,CAAC,GAAG,EAAE,GAAGE,QAAQ,CAAC,GAAG;AACrE,MAAMO,MAAM,GAAGA,CAAC,GAAGP,QAAQ,KAAK,QAAQF,MAAM,CAAC,GAAG,EAAE,GAAGE,QAAQ,CAAC,GAAG;AACnE,MAAMQ,MAAM,GAAIC,CAAC,IAAK;EACpB,MAAMC,KAAK,GAAGhB,KAAK,CAACe,CAAC,CAAC;EACtB,IAAIC,KAAK,IAAI,IAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,UAAU,CAACH,KAAK,CAAC,CAAC,EAAE;IACrD,OAAOb,MAAM,CAACa,KAAK,CAAC,CAACI,UAAU,CAAC,GAAG,CAAC,GAAGjB,MAAM,CAACa,KAAK,CAAC,CAACK,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIL,KAAK,EAAE;EAC7E;EACA,OAAOJ,QAAQ,CAACI,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5B,CAAC;AACD,MAAMM,IAAI,GAAGC,MAAM,CAACC,MAAM,CACvBT,CAAC,KAAM;EACNL,GAAG,EAAEA,CAAC,GAAGJ,QAAQ,KAAKgB,IAAI,CAACZ,GAAG,CAACK,CAAC,EAAE,GAAGT,QAAQ,CAAC,CAAC;EAC/CK,QAAQ,EAAEA,CAAC,GAAGL,QAAQ,KAAKgB,IAAI,CAACX,QAAQ,CAACI,CAAC,EAAE,GAAGT,QAAQ,CAAC,CAAC;EACzDM,QAAQ,EAAEA,CAAC,GAAGN,QAAQ,KAAKgB,IAAI,CAACV,QAAQ,CAACG,CAAC,EAAE,GAAGT,QAAQ,CAAC,CAAC;EACzDO,MAAM,EAAEA,CAAC,GAAGP,QAAQ,KAAKgB,IAAI,CAACT,MAAM,CAACE,CAAC,EAAE,GAAGT,QAAQ,CAAC,CAAC;EACrDQ,MAAM,EAAEA,CAAA,KAAMQ,IAAI,CAACR,MAAM,CAACC,CAAC,CAAC,CAAC;EAC7BU,QAAQ,EAAEA,CAAA,KAAMV,CAAC,CAACU,QAAQ,CAAC;AAC7B,CAAC,CAAC,EACF;EACEf,GAAG;EACHC,QAAQ;EACRC,QAAQ;EACRC,MAAM;EACNC;AACF,CACF,CAAC;AAED,SAASQ,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}