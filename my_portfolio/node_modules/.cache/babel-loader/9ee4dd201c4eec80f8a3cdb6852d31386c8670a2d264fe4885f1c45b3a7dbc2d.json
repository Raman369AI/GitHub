{"ast":null,"code":"import { t } from '../utils/index.mjs';\nconst position = {\n  position: true,\n  pos: t.prop(\"position\"),\n  zIndex: t.prop(\"zIndex\", \"zIndices\"),\n  inset: t.spaceT(\"inset\"),\n  insetX: t.spaceT([\"left\", \"right\"]),\n  insetInline: t.spaceT(\"insetInline\"),\n  insetY: t.spaceT([\"top\", \"bottom\"]),\n  insetBlock: t.spaceT(\"insetBlock\"),\n  top: t.spaceT(\"top\"),\n  insetBlockStart: t.spaceT(\"insetBlockStart\"),\n  bottom: t.spaceT(\"bottom\"),\n  insetBlockEnd: t.spaceT(\"insetBlockEnd\"),\n  left: t.spaceT(\"left\"),\n  insetInlineStart: t.logical({\n    scale: \"space\",\n    property: {\n      ltr: \"left\",\n      rtl: \"right\"\n    }\n  }),\n  right: t.spaceT(\"right\"),\n  insetInlineEnd: t.logical({\n    scale: \"space\",\n    property: {\n      ltr: \"right\",\n      rtl: \"left\"\n    }\n  })\n};\nObject.assign(position, {\n  insetStart: position.insetInlineStart,\n  insetEnd: position.insetInlineEnd\n});\nexport { position };","map":{"version":3,"names":["t","position","pos","prop","zIndex","inset","spaceT","insetX","insetInline","insetY","insetBlock","top","insetBlockStart","bottom","insetBlockEnd","left","insetInlineStart","logical","scale","property","ltr","rtl","right","insetInlineEnd","Object","assign","insetStart","insetEnd"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/styled-system/dist/esm/config/position.mjs"],"sourcesContent":["import { t } from '../utils/index.mjs';\n\nconst position = {\n  position: true,\n  pos: t.prop(\"position\"),\n  zIndex: t.prop(\"zIndex\", \"zIndices\"),\n  inset: t.spaceT(\"inset\"),\n  insetX: t.spaceT([\"left\", \"right\"]),\n  insetInline: t.spaceT(\"insetInline\"),\n  insetY: t.spaceT([\"top\", \"bottom\"]),\n  insetBlock: t.spaceT(\"insetBlock\"),\n  top: t.spaceT(\"top\"),\n  insetBlockStart: t.spaceT(\"insetBlockStart\"),\n  bottom: t.spaceT(\"bottom\"),\n  insetBlockEnd: t.spaceT(\"insetBlockEnd\"),\n  left: t.spaceT(\"left\"),\n  insetInlineStart: t.logical({\n    scale: \"space\",\n    property: { ltr: \"left\", rtl: \"right\" }\n  }),\n  right: t.spaceT(\"right\"),\n  insetInlineEnd: t.logical({\n    scale: \"space\",\n    property: { ltr: \"right\", rtl: \"left\" }\n  })\n};\nObject.assign(position, {\n  insetStart: position.insetInlineStart,\n  insetEnd: position.insetInlineEnd\n});\n\nexport { position };\n"],"mappings":"AAAA,SAASA,CAAC,QAAQ,oBAAoB;AAEtC,MAAMC,QAAQ,GAAG;EACfA,QAAQ,EAAE,IAAI;EACdC,GAAG,EAAEF,CAAC,CAACG,IAAI,CAAC,UAAU,CAAC;EACvBC,MAAM,EAAEJ,CAAC,CAACG,IAAI,CAAC,QAAQ,EAAE,UAAU,CAAC;EACpCE,KAAK,EAAEL,CAAC,CAACM,MAAM,CAAC,OAAO,CAAC;EACxBC,MAAM,EAAEP,CAAC,CAACM,MAAM,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;EACnCE,WAAW,EAAER,CAAC,CAACM,MAAM,CAAC,aAAa,CAAC;EACpCG,MAAM,EAAET,CAAC,CAACM,MAAM,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;EACnCI,UAAU,EAAEV,CAAC,CAACM,MAAM,CAAC,YAAY,CAAC;EAClCK,GAAG,EAAEX,CAAC,CAACM,MAAM,CAAC,KAAK,CAAC;EACpBM,eAAe,EAAEZ,CAAC,CAACM,MAAM,CAAC,iBAAiB,CAAC;EAC5CO,MAAM,EAAEb,CAAC,CAACM,MAAM,CAAC,QAAQ,CAAC;EAC1BQ,aAAa,EAAEd,CAAC,CAACM,MAAM,CAAC,eAAe,CAAC;EACxCS,IAAI,EAAEf,CAAC,CAACM,MAAM,CAAC,MAAM,CAAC;EACtBU,gBAAgB,EAAEhB,CAAC,CAACiB,OAAO,CAAC;IAC1BC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE;MAAEC,GAAG,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAQ;EACxC,CAAC,CAAC;EACFC,KAAK,EAAEtB,CAAC,CAACM,MAAM,CAAC,OAAO,CAAC;EACxBiB,cAAc,EAAEvB,CAAC,CAACiB,OAAO,CAAC;IACxBC,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE;MAAEC,GAAG,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAO;EACxC,CAAC;AACH,CAAC;AACDG,MAAM,CAACC,MAAM,CAACxB,QAAQ,EAAE;EACtByB,UAAU,EAAEzB,QAAQ,CAACe,gBAAgB;EACrCW,QAAQ,EAAE1B,QAAQ,CAACsB;AACrB,CAAC,CAAC;AAEF,SAAStB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}