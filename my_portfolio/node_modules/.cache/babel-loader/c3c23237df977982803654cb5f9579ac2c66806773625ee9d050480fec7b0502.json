{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst wait = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n/**\n * This is a custom hook that can be used to submit a form and simulate an API call\n * It uses Math.random() to simulate a random success or failure, with 50% chance of each\n */\nconst useSubmit = () => {\n  _s();\n  const [isLoading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n  const submit = async (url, data) => {\n    const random = Math.random();\n    setLoading(true);\n    try {\n      await wait(2000);\n      if (random < 0.5) {\n        throw new Error(\"Something went wrong\");\n      }\n      setResponse({\n        type: 'success',\n        message: `Thanks for your submission ${data.firstName}, we will get back to you shortly!`\n      });\n    } catch (error) {\n      setResponse({\n        type: 'error',\n        message: 'Something went wrong, please try again later!'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    isLoading,\n    response,\n    submit\n  };\n};\n_s(useSubmit, \"YOVOG/9T4K52uQQxOOHX4PP6REA=\");\nexport default useSubmit;","map":{"version":3,"names":["useState","wait","ms","Promise","resolve","setTimeout","useSubmit","_s","isLoading","setLoading","response","setResponse","submit","url","data","random","Math","Error","type","message","firstName","error"],"sources":["/home/coder/project/reactlab/src/hooks/useSubmit.js"],"sourcesContent":["import {useState} from \"react\";\n\nconst wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n/**\n * This is a custom hook that can be used to submit a form and simulate an API call\n * It uses Math.random() to simulate a random success or failure, with 50% chance of each\n */\nconst useSubmit = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  const submit = async (url, data) => {\n    const random = Math.random();\n    setLoading(true);\n    try {\n      await wait(2000);\n      if (random < 0.5) {\n        throw new Error(\"Something went wrong\");\n      }\n      setResponse({\n        type: 'success',\n        message: `Thanks for your submission ${data.firstName}, we will get back to you shortly!`,\n      })\n    } catch (error) {\n      setResponse({\n        type: 'error',\n        message: 'Something went wrong, please try again later!',\n      })\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { isLoading, response, submit };\n}\n\nexport default useSubmit;\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAE9B,MAAMC,IAAI,GAAIC,EAAE,IAAK,IAAIC,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;;AAEtE;AACA;AACA;AACA;AACA,MAAMI,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMY,MAAM,GAAG,MAAAA,CAAOC,GAAG,EAAEC,IAAI,KAAK;IAClC,MAAMC,MAAM,GAAGC,IAAI,CAACD,MAAM,CAAC,CAAC;IAC5BN,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMR,IAAI,CAAC,IAAI,CAAC;MAChB,IAAIc,MAAM,GAAG,GAAG,EAAE;QAChB,MAAM,IAAIE,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACAN,WAAW,CAAC;QACVO,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,8BAA8BL,IAAI,CAACM,SAAS;MACvD,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdV,WAAW,CAAC;QACVO,IAAI,EAAE,OAAO;QACbC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ,CAAC,SAAS;MACRV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,OAAO;IAAED,SAAS;IAAEE,QAAQ;IAAEE;EAAO,CAAC;AACxC,CAAC;AAAAL,EAAA,CA3BKD,SAAS;AA6Bf,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}