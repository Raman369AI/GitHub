{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { callAll, compact, cx } from '@chakra-ui/utils';\nimport { keyframes } from '@emotion/react';\nimport { useMemo, cloneElement } from 'react';\nimport { useCheckboxGroupContext } from './checkbox-context.mjs';\nimport { CheckboxIcon } from './checkbox-icon.mjs';\nimport { useCheckbox } from './use-checkbox.mjs';\nimport { useInitialAnimationState } from './use-initial-animation-state.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nconst rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nconst Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = {\n    ...group,\n    ...props\n  };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */jsx(CheckboxIcon, {}),\n    isChecked: isCheckedProp,\n    isDisabled = group?.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if (group?.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if (group?.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const shouldAnimate = useInitialAnimationState(state.isChecked);\n  const iconStyles = useMemo(() => ({\n    animation: !shouldAnimate ? void 0 : state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n    ...styles.icon,\n    ...compact({\n      fontSize: iconSize,\n      color: iconColor\n    })\n  }), [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon]);\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */jsxs(chakra.label, {\n    __css: {\n      ...rootStyles,\n      ...styles.container\n    },\n    className: cx(\"chakra-checkbox\", className),\n    ...getRootProps(),\n    children: [/* @__PURE__ */jsx(\"input\", {\n      className: \"chakra-checkbox__input\",\n      ...getInputProps(inputProps, ref)\n    }), /* @__PURE__ */jsx(chakra.span, {\n      __css: {\n        ...controlStyles,\n        ...styles.control\n      },\n      className: \"chakra-checkbox__control\",\n      ...getCheckboxProps(),\n      children: clonedIcon\n    }), children && /* @__PURE__ */jsx(chakra.span, {\n      className: \"chakra-checkbox__label\",\n      ...getLabelProps(),\n      __css: {\n        marginStart: spacing,\n        ...styles.label\n      },\n      children\n    })]\n  });\n});\nCheckbox.displayName = \"Checkbox\";\nexport { Checkbox };","map":{"version":3,"names":["jsx","jsxs","omitThemingProps","callAll","compact","cx","keyframes","useMemo","cloneElement","useCheckboxGroupContext","CheckboxIcon","useCheckbox","useInitialAnimationState","forwardRef","useMultiStyleConfig","chakra","controlStyles","display","alignItems","justifyContent","verticalAlign","userSelect","flexShrink","rootStyles","cursor","position","checkAnim","from","opacity","strokeDashoffset","transform","to","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","Checkbox2","props","ref","group","mergedProps","styles","ownProps","spacing","className","children","iconColor","iconSize","icon","isChecked","isCheckedProp","isDisabled","onChange","onChangeProp","inputProps","rest","value","includes","state","getInputProps","getCheckboxProps","getLabelProps","getRootProps","shouldAnimate","iconStyles","animation","isIndeterminate","fontSize","color","clonedIcon","__css","label","container","span","control","marginStart","displayName"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox.mjs"],"sourcesContent":["'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { callAll, compact, cx } from '@chakra-ui/utils';\nimport { keyframes } from '@emotion/react';\nimport { useMemo, cloneElement } from 'react';\nimport { useCheckboxGroupContext } from './checkbox-context.mjs';\nimport { CheckboxIcon } from './checkbox-icon.mjs';\nimport { useCheckbox } from './use-checkbox.mjs';\nimport { useInitialAnimationState } from './use-initial-animation-state.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nconst rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nconst Checkbox = forwardRef(\n  function Checkbox2(props, ref) {\n    const group = useCheckboxGroupContext();\n    const mergedProps = { ...group, ...props };\n    const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n    const ownProps = omitThemingProps(props);\n    const {\n      spacing = \"0.5rem\",\n      className,\n      children,\n      iconColor,\n      iconSize,\n      icon = /* @__PURE__ */ jsx(CheckboxIcon, {}),\n      isChecked: isCheckedProp,\n      isDisabled = group?.isDisabled,\n      onChange: onChangeProp,\n      inputProps,\n      ...rest\n    } = ownProps;\n    let isChecked = isCheckedProp;\n    if (group?.value && ownProps.value) {\n      isChecked = group.value.includes(ownProps.value);\n    }\n    let onChange = onChangeProp;\n    if (group?.onChange && ownProps.value) {\n      onChange = callAll(group.onChange, onChangeProp);\n    }\n    const {\n      state,\n      getInputProps,\n      getCheckboxProps,\n      getLabelProps,\n      getRootProps\n    } = useCheckbox({\n      ...rest,\n      isDisabled,\n      isChecked,\n      onChange\n    });\n    const shouldAnimate = useInitialAnimationState(state.isChecked);\n    const iconStyles = useMemo(\n      () => ({\n        animation: !shouldAnimate ? void 0 : state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n        ...styles.icon,\n        ...compact({\n          fontSize: iconSize,\n          color: iconColor\n        })\n      }),\n      [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon]\n    );\n    const clonedIcon = cloneElement(icon, {\n      __css: iconStyles,\n      isIndeterminate: state.isIndeterminate,\n      isChecked: state.isChecked\n    });\n    return /* @__PURE__ */ jsxs(\n      chakra.label,\n      {\n        __css: { ...rootStyles, ...styles.container },\n        className: cx(\"chakra-checkbox\", className),\n        ...getRootProps(),\n        children: [\n          /* @__PURE__ */ jsx(\n            \"input\",\n            {\n              className: \"chakra-checkbox__input\",\n              ...getInputProps(inputProps, ref)\n            }\n          ),\n          /* @__PURE__ */ jsx(\n            chakra.span,\n            {\n              __css: { ...controlStyles, ...styles.control },\n              className: \"chakra-checkbox__control\",\n              ...getCheckboxProps(),\n              children: clonedIcon\n            }\n          ),\n          children && /* @__PURE__ */ jsx(\n            chakra.span,\n            {\n              className: \"chakra-checkbox__label\",\n              ...getLabelProps(),\n              __css: {\n                marginStart: spacing,\n                ...styles.label\n              },\n              children\n            }\n          )\n        ]\n      }\n    );\n  }\n);\nCheckbox.displayName = \"Checkbox\";\n\nexport { Checkbox };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}