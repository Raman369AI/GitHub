{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@chakra-ui/hooks';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { dataAttr, cx } from '@chakra-ui/utils';\nimport { useMemo } from 'react';\nimport { useButtonGroup } from './button-context.mjs';\nimport { ButtonIcon } from './button-icon.mjs';\nimport { ButtonSpinner } from './button-spinner.mjs';\nimport { useButtonType } from './use-button-type.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", {\n    ...group,\n    ...props\n  });\n  const {\n    isDisabled = group?.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    shouldWrapChildren,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = {\n      ...styles?.[\"_focus\"],\n      zIndex: 1\n    };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...(!!group && {\n        _focus\n      })\n    };\n  }, [styles, group]);\n  const {\n    ref: _ref,\n    type: defaultType\n  } = useButtonType(as);\n  const contentProps = {\n    rightIcon,\n    leftIcon,\n    iconSpacing,\n    children,\n    shouldWrapChildren\n  };\n  return /* @__PURE__ */jsxs(chakra.button, {\n    disabled: isDisabled || isLoading,\n    ref: useMergeRefs(ref, _ref),\n    as,\n    type: type ?? defaultType,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: buttonStyles,\n    className: cx(\"chakra-button\", className),\n    ...rest,\n    children: [isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */jsx(ButtonSpinner, {\n      className: \"chakra-button__spinner--start\",\n      label: loadingText,\n      placement: \"start\",\n      spacing: iconSpacing,\n      children: spinner\n    }), isLoading ? loadingText || /* @__PURE__ */jsx(chakra.span, {\n      opacity: 0,\n      children: /* @__PURE__ */jsx(ButtonContent, {\n        ...contentProps\n      })\n    }) : /* @__PURE__ */jsx(ButtonContent, {\n      ...contentProps\n    }), isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */jsx(ButtonSpinner, {\n      className: \"chakra-button__spinner--end\",\n      label: loadingText,\n      placement: \"end\",\n      spacing: iconSpacing,\n      children: spinner\n    })]\n  });\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const {\n    leftIcon,\n    rightIcon,\n    children,\n    iconSpacing,\n    shouldWrapChildren\n  } = props;\n  if (!shouldWrapChildren) {\n    return /* @__PURE__ */jsxs(Fragment, {\n      children: [leftIcon && /* @__PURE__ */jsx(ButtonIcon, {\n        marginEnd: iconSpacing,\n        children: leftIcon\n      }), children, rightIcon && /* @__PURE__ */jsx(ButtonIcon, {\n        marginStart: iconSpacing,\n        children: rightIcon\n      })]\n    });\n  }\n  return /* @__PURE__ */jsxs(\"span\", {\n    style: {\n      display: \"contents\"\n    },\n    children: [leftIcon && /* @__PURE__ */jsx(ButtonIcon, {\n      marginEnd: iconSpacing,\n      children: leftIcon\n    }), children, rightIcon && /* @__PURE__ */jsx(ButtonIcon, {\n      marginStart: iconSpacing,\n      children: rightIcon\n    })]\n  });\n}\nexport { Button };","map":{"version":3,"names":["jsxs","jsx","Fragment","useMergeRefs","omitThemingProps","dataAttr","cx","useMemo","useButtonGroup","ButtonIcon","ButtonSpinner","useButtonType","forwardRef","useStyleConfig","chakra","Button","props","ref","group","styles","isDisabled","isLoading","isActive","children","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","className","as","shouldWrapChildren","rest","buttonStyles","_focus","zIndex","display","appearance","alignItems","justifyContent","userSelect","position","whiteSpace","verticalAlign","outline","_ref","defaultType","contentProps","button","disabled","__css","label","placement","spacing","span","opacity","ButtonContent","displayName","marginEnd","marginStart","style"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/button/button.mjs"],"sourcesContent":["'use client';\nimport { jsxs, jsx, Fragment } from 'react/jsx-runtime';\nimport { useMergeRefs } from '@chakra-ui/hooks';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { dataAttr, cx } from '@chakra-ui/utils';\nimport { useMemo } from 'react';\nimport { useButtonGroup } from './button-context.mjs';\nimport { ButtonIcon } from './button-icon.mjs';\nimport { ButtonSpinner } from './button-spinner.mjs';\nimport { useButtonType } from './use-button-type.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group?.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    shouldWrapChildren,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles?.[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = {\n    rightIcon,\n    leftIcon,\n    iconSpacing,\n    children,\n    shouldWrapChildren\n  };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      disabled: isDisabled || isLoading,\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type ?? defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing, shouldWrapChildren } = props;\n  if (!shouldWrapChildren) {\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n      children,\n      rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n    ] });\n  }\n  return /* @__PURE__ */ jsxs(\"span\", { style: { display: \"contents\" }, children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport { Button };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}