{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { BreadcrumbLink } from './breadcrumb-link.mjs';\nimport { BreadcrumbSeparator } from './breadcrumb-separator.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst BreadcrumbItem = forwardRef(function BreadcrumbItem2(props, ref) {\n  const {\n    isCurrentPage,\n    separator,\n    isLastChild,\n    spacing,\n    children,\n    className,\n    ...rest\n  } = props;\n  const validChildren = getValidChildren(children);\n  const clones = validChildren.map(child => {\n    if (child.type === BreadcrumbLink) {\n      return cloneElement(child, {\n        isCurrentPage\n      });\n    }\n    if (child.type === BreadcrumbSeparator) {\n      return cloneElement(child, {\n        spacing,\n        children: child.props.children || separator\n      });\n    }\n    return child;\n  });\n  const styles = useBreadcrumbStyles();\n  const itemStyles = defineStyle({\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    ...styles.item\n  });\n  const _className = cx(\"chakra-breadcrumb__list-item\", className);\n  return /* @__PURE__ */jsxs(chakra.li, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: itemStyles,\n    children: [clones, !isLastChild && /* @__PURE__ */jsx(BreadcrumbSeparator, {\n      spacing,\n      children: separator\n    })]\n  });\n});\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\nexport { BreadcrumbItem };","map":{"version":3,"names":["jsxs","jsx","defineStyle","getValidChildren","cx","cloneElement","useBreadcrumbStyles","BreadcrumbLink","BreadcrumbSeparator","forwardRef","chakra","BreadcrumbItem","BreadcrumbItem2","props","ref","isCurrentPage","separator","isLastChild","spacing","children","className","rest","validChildren","clones","map","child","type","styles","itemStyles","display","alignItems","item","_className","li","__css","displayName"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/breadcrumb/breadcrumb-item.mjs"],"sourcesContent":["'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { defineStyle } from '@chakra-ui/styled-system';\nimport { getValidChildren, cx } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { useBreadcrumbStyles } from './breadcrumb-context.mjs';\nimport { BreadcrumbLink } from './breadcrumb-link.mjs';\nimport { BreadcrumbSeparator } from './breadcrumb-separator.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst BreadcrumbItem = forwardRef(\n  function BreadcrumbItem2(props, ref) {\n    const {\n      isCurrentPage,\n      separator,\n      isLastChild,\n      spacing,\n      children,\n      className,\n      ...rest\n    } = props;\n    const validChildren = getValidChildren(children);\n    const clones = validChildren.map((child) => {\n      if (child.type === BreadcrumbLink) {\n        return cloneElement(child, {\n          isCurrentPage\n        });\n      }\n      if (child.type === BreadcrumbSeparator) {\n        return cloneElement(child, {\n          spacing,\n          children: child.props.children || separator\n        });\n      }\n      return child;\n    });\n    const styles = useBreadcrumbStyles();\n    const itemStyles = defineStyle({\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      ...styles.item\n    });\n    const _className = cx(\"chakra-breadcrumb__list-item\", className);\n    return /* @__PURE__ */ jsxs(chakra.li, { ref, className: _className, ...rest, __css: itemStyles, children: [\n      clones,\n      !isLastChild && /* @__PURE__ */ jsx(BreadcrumbSeparator, { spacing, children: separator })\n    ] });\n  }\n);\nBreadcrumbItem.displayName = \"BreadcrumbItem\";\n\nexport { BreadcrumbItem };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,IAAI,EAAEC,GAAG,QAAQ,mBAAmB;AAC7C,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,gBAAgB,EAAEC,EAAE,QAAQ,kBAAkB;AACvD,SAASC,YAAY,QAAQ,OAAO;AACpC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,mBAAmB,QAAQ,4BAA4B;AAChE,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,MAAMC,cAAc,GAAGF,UAAU,CAC/B,SAASG,eAAeA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACnC,MAAM;IACJC,aAAa;IACbC,SAAS;IACTC,WAAW;IACXC,OAAO;IACPC,QAAQ;IACRC,SAAS;IACT,GAAGC;EACL,CAAC,GAAGR,KAAK;EACT,MAAMS,aAAa,GAAGnB,gBAAgB,CAACgB,QAAQ,CAAC;EAChD,MAAMI,MAAM,GAAGD,aAAa,CAACE,GAAG,CAAEC,KAAK,IAAK;IAC1C,IAAIA,KAAK,CAACC,IAAI,KAAKnB,cAAc,EAAE;MACjC,OAAOF,YAAY,CAACoB,KAAK,EAAE;QACzBV;MACF,CAAC,CAAC;IACJ;IACA,IAAIU,KAAK,CAACC,IAAI,KAAKlB,mBAAmB,EAAE;MACtC,OAAOH,YAAY,CAACoB,KAAK,EAAE;QACzBP,OAAO;QACPC,QAAQ,EAAEM,KAAK,CAACZ,KAAK,CAACM,QAAQ,IAAIH;MACpC,CAAC,CAAC;IACJ;IACA,OAAOS,KAAK;EACd,CAAC,CAAC;EACF,MAAME,MAAM,GAAGrB,mBAAmB,CAAC,CAAC;EACpC,MAAMsB,UAAU,GAAG1B,WAAW,CAAC;IAC7B2B,OAAO,EAAE,aAAa;IACtBC,UAAU,EAAE,QAAQ;IACpB,GAAGH,MAAM,CAACI;EACZ,CAAC,CAAC;EACF,MAAMC,UAAU,GAAG5B,EAAE,CAAC,8BAA8B,EAAEgB,SAAS,CAAC;EAChE,OAAO,eAAgBpB,IAAI,CAACU,MAAM,CAACuB,EAAE,EAAE;IAAEnB,GAAG;IAAEM,SAAS,EAAEY,UAAU;IAAE,GAAGX,IAAI;IAAEa,KAAK,EAAEN,UAAU;IAAET,QAAQ,EAAE,CACzGI,MAAM,EACN,CAACN,WAAW,IAAI,eAAgBhB,GAAG,CAACO,mBAAmB,EAAE;MAAEU,OAAO;MAAEC,QAAQ,EAAEH;IAAU,CAAC,CAAC;EAC1F,CAAC,CAAC;AACN,CACF,CAAC;AACDL,cAAc,CAACwB,WAAW,GAAG,gBAAgB;AAE7C,SAASxB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}