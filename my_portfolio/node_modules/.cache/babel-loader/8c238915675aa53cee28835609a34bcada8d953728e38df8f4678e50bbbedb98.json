{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, cx, getValidChildren, compact } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nconst InputGroup = forwardRef(function InputGroup2(props, ref) {\n  const styles = useMultiStyleConfig(\"Input\", props);\n  const {\n    children,\n    className,\n    ...rest\n  } = omitThemingProps(props);\n  const _className = cx(\"chakra-input__group\", className);\n  const groupStyles = {};\n  const validChildren = getValidChildren(children);\n  const input = styles.field;\n  validChildren.forEach(child => {\n    if (!styles) return;\n    if (input && child.type.id === \"InputLeftElement\") {\n      groupStyles.paddingStart = input.height ?? input.h;\n    }\n    if (input && child.type.id === \"InputRightElement\") {\n      groupStyles.paddingEnd = input.height ?? input.h;\n    }\n    if (child.type.id === \"InputRightAddon\") {\n      groupStyles.borderEndRadius = 0;\n    }\n    if (child.type.id === \"InputLeftAddon\") {\n      groupStyles.borderStartRadius = 0;\n    }\n  });\n  const clones = validChildren.map(child => {\n    const theming = compact({\n      size: child.props?.size || props.size,\n      variant: child.props?.variant || props.variant\n    });\n    return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n  });\n  return /* @__PURE__ */jsx(chakra.div, {\n    className: _className,\n    ref,\n    __css: {\n      width: \"100%\",\n      display: \"flex\",\n      position: \"relative\",\n      // Parts of inputs override z-index to ensure that they stack correctly on each other\n      // Create a new stacking context so that these overrides don't leak out and conflict with other z-indexes\n      isolation: \"isolate\",\n      ...styles.group\n    },\n    \"data-group\": true,\n    ...rest,\n    children: /* @__PURE__ */jsx(InputGroupStylesProvider, {\n      value: styles,\n      children: clones\n    })\n  });\n});\nInputGroup.displayName = \"InputGroup\";\nexport { InputGroup, useInputGroupStyles };","map":{"version":3,"names":["jsx","omitThemingProps","createContext","cx","getValidChildren","compact","cloneElement","forwardRef","useMultiStyleConfig","chakra","InputGroupStylesProvider","useInputGroupStyles","name","errorMessage","InputGroup","InputGroup2","props","ref","styles","children","className","rest","_className","groupStyles","validChildren","input","field","forEach","child","type","id","paddingStart","height","h","paddingEnd","borderEndRadius","borderStartRadius","clones","map","theming","size","variant","Object","assign","div","__css","width","display","position","isolation","group","value","displayName"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/input/input-group.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, cx, getValidChildren, compact } from '@chakra-ui/utils';\nimport { cloneElement } from 'react';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [InputGroupStylesProvider, useInputGroupStyles] = createContext({\n  name: `InputGroupStylesContext`,\n  errorMessage: `useInputGroupStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<InputGroup />\" `\n});\nconst InputGroup = forwardRef(\n  function InputGroup2(props, ref) {\n    const styles = useMultiStyleConfig(\"Input\", props);\n    const { children, className, ...rest } = omitThemingProps(props);\n    const _className = cx(\"chakra-input__group\", className);\n    const groupStyles = {};\n    const validChildren = getValidChildren(children);\n    const input = styles.field;\n    validChildren.forEach((child) => {\n      if (!styles)\n        return;\n      if (input && child.type.id === \"InputLeftElement\") {\n        groupStyles.paddingStart = input.height ?? input.h;\n      }\n      if (input && child.type.id === \"InputRightElement\") {\n        groupStyles.paddingEnd = input.height ?? input.h;\n      }\n      if (child.type.id === \"InputRightAddon\") {\n        groupStyles.borderEndRadius = 0;\n      }\n      if (child.type.id === \"InputLeftAddon\") {\n        groupStyles.borderStartRadius = 0;\n      }\n    });\n    const clones = validChildren.map((child) => {\n      const theming = compact({\n        size: child.props?.size || props.size,\n        variant: child.props?.variant || props.variant\n      });\n      return child.type.id !== \"Input\" ? cloneElement(child, theming) : cloneElement(child, Object.assign(theming, groupStyles, child.props));\n    });\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        className: _className,\n        ref,\n        __css: {\n          width: \"100%\",\n          display: \"flex\",\n          position: \"relative\",\n          // Parts of inputs override z-index to ensure that they stack correctly on each other\n          // Create a new stacking context so that these overrides don't leak out and conflict with other z-indexes\n          isolation: \"isolate\",\n          ...styles.group\n        },\n        \"data-group\": true,\n        ...rest,\n        children: /* @__PURE__ */ jsx(InputGroupStylesProvider, { value: styles, children: clones })\n      }\n    );\n  }\n);\nInputGroup.displayName = \"InputGroup\";\n\nexport { InputGroup, useInputGroupStyles };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,SAASC,aAAa,EAAEC,EAAE,EAAEC,gBAAgB,EAAEC,OAAO,QAAQ,kBAAkB;AAC/E,SAASC,YAAY,QAAQ,OAAO;AACpC,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,MAAM,CAACC,wBAAwB,EAAEC,mBAAmB,CAAC,GAAGT,aAAa,CAAC;EACpEU,IAAI,EAAE,yBAAyB;EAC/BC,YAAY,EAAE;AAChB,CAAC,CAAC;AACF,MAAMC,UAAU,GAAGP,UAAU,CAC3B,SAASQ,WAAWA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC/B,MAAMC,MAAM,GAAGV,mBAAmB,CAAC,OAAO,EAAEQ,KAAK,CAAC;EAClD,MAAM;IAAEG,QAAQ;IAAEC,SAAS;IAAE,GAAGC;EAAK,CAAC,GAAGpB,gBAAgB,CAACe,KAAK,CAAC;EAChE,MAAMM,UAAU,GAAGnB,EAAE,CAAC,qBAAqB,EAAEiB,SAAS,CAAC;EACvD,MAAMG,WAAW,GAAG,CAAC,CAAC;EACtB,MAAMC,aAAa,GAAGpB,gBAAgB,CAACe,QAAQ,CAAC;EAChD,MAAMM,KAAK,GAAGP,MAAM,CAACQ,KAAK;EAC1BF,aAAa,CAACG,OAAO,CAAEC,KAAK,IAAK;IAC/B,IAAI,CAACV,MAAM,EACT;IACF,IAAIO,KAAK,IAAIG,KAAK,CAACC,IAAI,CAACC,EAAE,KAAK,kBAAkB,EAAE;MACjDP,WAAW,CAACQ,YAAY,GAAGN,KAAK,CAACO,MAAM,IAAIP,KAAK,CAACQ,CAAC;IACpD;IACA,IAAIR,KAAK,IAAIG,KAAK,CAACC,IAAI,CAACC,EAAE,KAAK,mBAAmB,EAAE;MAClDP,WAAW,CAACW,UAAU,GAAGT,KAAK,CAACO,MAAM,IAAIP,KAAK,CAACQ,CAAC;IAClD;IACA,IAAIL,KAAK,CAACC,IAAI,CAACC,EAAE,KAAK,iBAAiB,EAAE;MACvCP,WAAW,CAACY,eAAe,GAAG,CAAC;IACjC;IACA,IAAIP,KAAK,CAACC,IAAI,CAACC,EAAE,KAAK,gBAAgB,EAAE;MACtCP,WAAW,CAACa,iBAAiB,GAAG,CAAC;IACnC;EACF,CAAC,CAAC;EACF,MAAMC,MAAM,GAAGb,aAAa,CAACc,GAAG,CAAEV,KAAK,IAAK;IAC1C,MAAMW,OAAO,GAAGlC,OAAO,CAAC;MACtBmC,IAAI,EAAEZ,KAAK,CAACZ,KAAK,EAAEwB,IAAI,IAAIxB,KAAK,CAACwB,IAAI;MACrCC,OAAO,EAAEb,KAAK,CAACZ,KAAK,EAAEyB,OAAO,IAAIzB,KAAK,CAACyB;IACzC,CAAC,CAAC;IACF,OAAOb,KAAK,CAACC,IAAI,CAACC,EAAE,KAAK,OAAO,GAAGxB,YAAY,CAACsB,KAAK,EAAEW,OAAO,CAAC,GAAGjC,YAAY,CAACsB,KAAK,EAAEc,MAAM,CAACC,MAAM,CAACJ,OAAO,EAAEhB,WAAW,EAAEK,KAAK,CAACZ,KAAK,CAAC,CAAC;EACzI,CAAC,CAAC;EACF,OAAO,eAAgBhB,GAAG,CACxBS,MAAM,CAACmC,GAAG,EACV;IACExB,SAAS,EAAEE,UAAU;IACrBL,GAAG;IACH4B,KAAK,EAAE;MACLC,KAAK,EAAE,MAAM;MACbC,OAAO,EAAE,MAAM;MACfC,QAAQ,EAAE,UAAU;MACpB;MACA;MACAC,SAAS,EAAE,SAAS;MACpB,GAAG/B,MAAM,CAACgC;IACZ,CAAC;IACD,YAAY,EAAE,IAAI;IAClB,GAAG7B,IAAI;IACPF,QAAQ,EAAE,eAAgBnB,GAAG,CAACU,wBAAwB,EAAE;MAAEyC,KAAK,EAAEjC,MAAM;MAAEC,QAAQ,EAAEkB;IAAO,CAAC;EAC7F,CACF,CAAC;AACH,CACF,CAAC;AACDvB,UAAU,CAACsC,WAAW,GAAG,YAAY;AAErC,SAAStC,UAAU,EAAEH,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}