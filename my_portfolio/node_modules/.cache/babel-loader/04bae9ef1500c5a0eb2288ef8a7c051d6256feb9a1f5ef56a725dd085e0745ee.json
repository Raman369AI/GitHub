{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useDrawerContext } from './drawer.mjs';\nimport { useModalContext, useModalStyles } from './modal.mjs';\nimport { ModalFocusScope } from './modal-focus.mjs';\nimport { Slide } from '../transition/slide.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nconst MotionDiv = chakra(Slide);\nconst DrawerContent = forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    motionProps,\n    containerProps: rootProps,\n    ...rest\n  } = props;\n  const {\n    getDialogProps,\n    getDialogContainerProps,\n    isOpen\n  } = useModalContext();\n  const dialogProps = getDialogProps(rest, ref);\n  const containerProps = getDialogContainerProps(rootProps);\n  const _className = cx(\"chakra-modal__content\", className);\n  const styles = useModalStyles();\n  const dialogStyles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    position: \"relative\",\n    width: \"100%\",\n    outline: 0,\n    ...styles.dialog\n  };\n  const dialogContainerStyles = {\n    display: \"flex\",\n    width: \"100vw\",\n    height: \"$100vh\",\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    ...styles.dialogContainer\n  };\n  const {\n    placement\n  } = useDrawerContext();\n  return /* @__PURE__ */jsx(ModalFocusScope, {\n    children: /* @__PURE__ */jsx(chakra.div, {\n      ...containerProps,\n      className: \"chakra-modal__content-container\",\n      __css: dialogContainerStyles,\n      children: /* @__PURE__ */jsx(MotionDiv, {\n        motionProps,\n        direction: placement,\n        in: isOpen,\n        className: _className,\n        ...dialogProps,\n        __css: dialogStyles,\n        children\n      })\n    })\n  });\n});\nDrawerContent.displayName = \"DrawerContent\";\nexport { DrawerContent };","map":{"version":3,"names":["jsx","cx","useDrawerContext","useModalContext","useModalStyles","ModalFocusScope","Slide","chakra","forwardRef","MotionDiv","DrawerContent","props","ref","className","children","motionProps","containerProps","rootProps","rest","getDialogProps","getDialogContainerProps","isOpen","dialogProps","_className","styles","dialogStyles","display","flexDirection","position","width","outline","dialog","dialogContainerStyles","height","left","top","dialogContainer","placement","div","__css","direction","in","displayName"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/modal/drawer-content.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useDrawerContext } from './drawer.mjs';\nimport { useModalContext, useModalStyles } from './modal.mjs';\nimport { ModalFocusScope } from './modal-focus.mjs';\nimport { Slide } from '../transition/slide.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\n\nconst MotionDiv = chakra(Slide);\nconst DrawerContent = forwardRef(\n  (props, ref) => {\n    const {\n      className,\n      children,\n      motionProps,\n      containerProps: rootProps,\n      ...rest\n    } = props;\n    const { getDialogProps, getDialogContainerProps, isOpen } = useModalContext();\n    const dialogProps = getDialogProps(rest, ref);\n    const containerProps = getDialogContainerProps(rootProps);\n    const _className = cx(\"chakra-modal__content\", className);\n    const styles = useModalStyles();\n    const dialogStyles = {\n      display: \"flex\",\n      flexDirection: \"column\",\n      position: \"relative\",\n      width: \"100%\",\n      outline: 0,\n      ...styles.dialog\n    };\n    const dialogContainerStyles = {\n      display: \"flex\",\n      width: \"100vw\",\n      height: \"$100vh\",\n      position: \"fixed\",\n      left: 0,\n      top: 0,\n      ...styles.dialogContainer\n    };\n    const { placement } = useDrawerContext();\n    return /* @__PURE__ */ jsx(ModalFocusScope, { children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...containerProps,\n        className: \"chakra-modal__content-container\",\n        __css: dialogContainerStyles,\n        children: /* @__PURE__ */ jsx(\n          MotionDiv,\n          {\n            motionProps,\n            direction: placement,\n            in: isOpen,\n            className: _className,\n            ...dialogProps,\n            __css: dialogStyles,\n            children\n          }\n        )\n      }\n    ) });\n  }\n);\nDrawerContent.displayName = \"DrawerContent\";\n\nexport { DrawerContent };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,gBAAgB,QAAQ,cAAc;AAC/C,SAASC,eAAe,EAAEC,cAAc,QAAQ,aAAa;AAC7D,SAASC,eAAe,QAAQ,mBAAmB;AACnD,SAASC,KAAK,QAAQ,yBAAyB;AAC/C,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,UAAU,QAAQ,2BAA2B;AAEtD,MAAMC,SAAS,GAAGF,MAAM,CAACD,KAAK,CAAC;AAC/B,MAAMI,aAAa,GAAGF,UAAU,CAC9B,CAACG,KAAK,EAAEC,GAAG,KAAK;EACd,MAAM;IACJC,SAAS;IACTC,QAAQ;IACRC,WAAW;IACXC,cAAc,EAAEC,SAAS;IACzB,GAAGC;EACL,CAAC,GAAGP,KAAK;EACT,MAAM;IAAEQ,cAAc;IAAEC,uBAAuB;IAAEC;EAAO,CAAC,GAAGlB,eAAe,CAAC,CAAC;EAC7E,MAAMmB,WAAW,GAAGH,cAAc,CAACD,IAAI,EAAEN,GAAG,CAAC;EAC7C,MAAMI,cAAc,GAAGI,uBAAuB,CAACH,SAAS,CAAC;EACzD,MAAMM,UAAU,GAAGtB,EAAE,CAAC,uBAAuB,EAAEY,SAAS,CAAC;EACzD,MAAMW,MAAM,GAAGpB,cAAc,CAAC,CAAC;EAC/B,MAAMqB,YAAY,GAAG;IACnBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE,MAAM;IACbC,OAAO,EAAE,CAAC;IACV,GAAGN,MAAM,CAACO;EACZ,CAAC;EACD,MAAMC,qBAAqB,GAAG;IAC5BN,OAAO,EAAE,MAAM;IACfG,KAAK,EAAE,OAAO;IACdI,MAAM,EAAE,QAAQ;IAChBL,QAAQ,EAAE,OAAO;IACjBM,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC;IACN,GAAGX,MAAM,CAACY;EACZ,CAAC;EACD,MAAM;IAAEC;EAAU,CAAC,GAAGnC,gBAAgB,CAAC,CAAC;EACxC,OAAO,eAAgBF,GAAG,CAACK,eAAe,EAAE;IAAES,QAAQ,EAAE,eAAgBd,GAAG,CACzEO,MAAM,CAAC+B,GAAG,EACV;MACE,GAAGtB,cAAc;MACjBH,SAAS,EAAE,iCAAiC;MAC5C0B,KAAK,EAAEP,qBAAqB;MAC5BlB,QAAQ,EAAE,eAAgBd,GAAG,CAC3BS,SAAS,EACT;QACEM,WAAW;QACXyB,SAAS,EAAEH,SAAS;QACpBI,EAAE,EAAEpB,MAAM;QACVR,SAAS,EAAEU,UAAU;QACrB,GAAGD,WAAW;QACdiB,KAAK,EAAEd,YAAY;QACnBX;MACF,CACF;IACF,CACF;EAAE,CAAC,CAAC;AACN,CACF,CAAC;AACDJ,aAAa,CAACgC,WAAW,GAAG,eAAe;AAE3C,SAAShC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}