{"ast":null,"code":"var _jsxFileName = \"/home/coder/project/reactlab/src/context/alertContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlertContext = /*#__PURE__*/createContext(undefined);\nexport const AlertProvider = ({\n  children\n}) => {\n  _s();\n  const [state, setState] = useState({\n    isOpen: false,\n    // Type can be either \"success\" or \"error\"\n    type: 'success',\n    // Message to be displayed, can be any string\n    message: ''\n  });\n  return /*#__PURE__*/_jsxDEV(AlertContext.Provider, {\n    value: {\n      ...state,\n      onOpen: (type, message) => setState({\n        isOpen: true,\n        type,\n        message\n      }),\n      onClose: () => setState({\n        isOpen: false,\n        type: '',\n        message: ''\n      })\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertProvider, \"XH9ker2pvmT4pgVqJl4L1FgTFpY=\");\n_c = AlertProvider;\nexport const useAlertContext = () => {\n  _s2();\n  return useContext(AlertContext);\n};\n_s2(useAlertContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AlertProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","AlertContext","undefined","AlertProvider","children","_s","state","setState","isOpen","type","message","Provider","value","onOpen","onClose","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAlertContext","_s2","$RefreshReg$"],"sources":["/home/coder/project/reactlab/src/context/alertContext.js"],"sourcesContent":["import {createContext, useContext, useState} from \"react\";\n\nconst AlertContext = createContext(undefined);\n\nexport const AlertProvider = ({ children }) => {\n  const [state, setState] = useState({\n    isOpen: false,\n    // Type can be either \"success\" or \"error\"\n    type: 'success',\n    // Message to be displayed, can be any string\n    message: '',\n  });\n\n  return (\n    <AlertContext.Provider\n      value={{\n        ...state,\n        onOpen: (type, message) => setState({ isOpen: true, type, message }),\n        onClose: () => setState({ isOpen: false, type: '', message: '' }),\n      }}\n    >\n      {children}\n    </AlertContext.Provider>\n  );\n};\n\nexport const useAlertContext = () => useContext(AlertContext);\n"],"mappings":";;;AAAA,SAAQA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,gBAAGL,aAAa,CAACM,SAAS,CAAC;AAE7C,OAAO,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IACjCU,MAAM,EAAE,KAAK;IACb;IACAC,IAAI,EAAE,SAAS;IACf;IACAC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,oBACEV,OAAA,CAACC,YAAY,CAACU,QAAQ;IACpBC,KAAK,EAAE;MACL,GAAGN,KAAK;MACRO,MAAM,EAAEA,CAACJ,IAAI,EAAEC,OAAO,KAAKH,QAAQ,CAAC;QAAEC,MAAM,EAAE,IAAI;QAAEC,IAAI;QAAEC;MAAQ,CAAC,CAAC;MACpEI,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAAC;QAAEC,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC;IAClE,CAAE;IAAAN,QAAA,EAEDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACb,EAAA,CApBWF,aAAa;AAAAgB,EAAA,GAAbhB,aAAa;AAsB1B,OAAO,MAAMiB,eAAe,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxB,UAAU,CAACI,YAAY,CAAC;AAAA;AAACoB,GAAA,CAAjDD,eAAe;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}