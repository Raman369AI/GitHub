{"ast":null,"code":"'use client';\n\nimport { useTheme } from './use-theme.mjs';\nimport { useColorMode } from '../color-mode/color-mode-context.mjs';\nfunction useChakra() {\n  const colorModeResult = useColorMode();\n  const theme = useTheme();\n  return {\n    ...colorModeResult,\n    theme\n  };\n}\nfunction getBreakpointValue(theme, value, fallback) {\n  if (value == null) return value;\n  const getValue = val => theme.__breakpoints?.asArray?.[val];\n  return getValue(value) ?? getValue(fallback) ?? fallback;\n}\nfunction getTokenValue(theme, value, fallback) {\n  if (value == null) return value;\n  const getValue = val => theme.__cssMap?.[val]?.value;\n  return getValue(value) ?? getValue(fallback) ?? fallback;\n}\nfunction useToken(scale, token, fallback) {\n  const theme = useTheme();\n  return getToken(scale, token, fallback)(theme);\n}\nfunction getToken(scale, token, fallback) {\n  const _token = Array.isArray(token) ? token : [token];\n  const _fallback = Array.isArray(fallback) ? fallback : [fallback];\n  return theme => {\n    const fallbackArr = _fallback.filter(Boolean);\n    const result = _token.map((token2, index) => {\n      if (scale === \"breakpoints\") {\n        return getBreakpointValue(theme, token2, fallbackArr[index] ?? token2);\n      }\n      const path = `${scale}.${token2}`;\n      return getTokenValue(theme, path, fallbackArr[index] ?? token2);\n    });\n    return Array.isArray(token) ? result : result[0];\n  };\n}\nexport { getToken, useChakra, useToken };","map":{"version":3,"names":["useTheme","useColorMode","useChakra","colorModeResult","theme","getBreakpointValue","value","fallback","getValue","val","__breakpoints","asArray","getTokenValue","__cssMap","useToken","scale","token","getToken","_token","Array","isArray","_fallback","fallbackArr","filter","Boolean","result","map","token2","index","path"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/system/hooks.mjs"],"sourcesContent":["'use client';\nimport { useTheme } from './use-theme.mjs';\nimport { useColorMode } from '../color-mode/color-mode-context.mjs';\n\nfunction useChakra() {\n  const colorModeResult = useColorMode();\n  const theme = useTheme();\n  return { ...colorModeResult, theme };\n}\nfunction getBreakpointValue(theme, value, fallback) {\n  if (value == null)\n    return value;\n  const getValue = (val) => theme.__breakpoints?.asArray?.[val];\n  return getValue(value) ?? getValue(fallback) ?? fallback;\n}\nfunction getTokenValue(theme, value, fallback) {\n  if (value == null)\n    return value;\n  const getValue = (val) => theme.__cssMap?.[val]?.value;\n  return getValue(value) ?? getValue(fallback) ?? fallback;\n}\nfunction useToken(scale, token, fallback) {\n  const theme = useTheme();\n  return getToken(scale, token, fallback)(theme);\n}\nfunction getToken(scale, token, fallback) {\n  const _token = Array.isArray(token) ? token : [token];\n  const _fallback = Array.isArray(fallback) ? fallback : [fallback];\n  return (theme) => {\n    const fallbackArr = _fallback.filter(Boolean);\n    const result = _token.map((token2, index) => {\n      if (scale === \"breakpoints\") {\n        return getBreakpointValue(theme, token2, fallbackArr[index] ?? token2);\n      }\n      const path = `${scale}.${token2}`;\n      return getTokenValue(theme, path, fallbackArr[index] ?? token2);\n    });\n    return Array.isArray(token) ? result : result[0];\n  };\n}\n\nexport { getToken, useChakra, useToken };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,YAAY,QAAQ,sCAAsC;AAEnE,SAASC,SAASA,CAAA,EAAG;EACnB,MAAMC,eAAe,GAAGF,YAAY,CAAC,CAAC;EACtC,MAAMG,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,OAAO;IAAE,GAAGG,eAAe;IAAEC;EAAM,CAAC;AACtC;AACA,SAASC,kBAAkBA,CAACD,KAAK,EAAEE,KAAK,EAAEC,QAAQ,EAAE;EAClD,IAAID,KAAK,IAAI,IAAI,EACf,OAAOA,KAAK;EACd,MAAME,QAAQ,GAAIC,GAAG,IAAKL,KAAK,CAACM,aAAa,EAAEC,OAAO,GAAGF,GAAG,CAAC;EAC7D,OAAOD,QAAQ,CAACF,KAAK,CAAC,IAAIE,QAAQ,CAACD,QAAQ,CAAC,IAAIA,QAAQ;AAC1D;AACA,SAASK,aAAaA,CAACR,KAAK,EAAEE,KAAK,EAAEC,QAAQ,EAAE;EAC7C,IAAID,KAAK,IAAI,IAAI,EACf,OAAOA,KAAK;EACd,MAAME,QAAQ,GAAIC,GAAG,IAAKL,KAAK,CAACS,QAAQ,GAAGJ,GAAG,CAAC,EAAEH,KAAK;EACtD,OAAOE,QAAQ,CAACF,KAAK,CAAC,IAAIE,QAAQ,CAACD,QAAQ,CAAC,IAAIA,QAAQ;AAC1D;AACA,SAASO,QAAQA,CAACC,KAAK,EAAEC,KAAK,EAAET,QAAQ,EAAE;EACxC,MAAMH,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,OAAOiB,QAAQ,CAACF,KAAK,EAAEC,KAAK,EAAET,QAAQ,CAAC,CAACH,KAAK,CAAC;AAChD;AACA,SAASa,QAAQA,CAACF,KAAK,EAAEC,KAAK,EAAET,QAAQ,EAAE;EACxC,MAAMW,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC;EACrD,MAAMK,SAAS,GAAGF,KAAK,CAACC,OAAO,CAACb,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;EACjE,OAAQH,KAAK,IAAK;IAChB,MAAMkB,WAAW,GAAGD,SAAS,CAACE,MAAM,CAACC,OAAO,CAAC;IAC7C,MAAMC,MAAM,GAAGP,MAAM,CAACQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MAC3C,IAAIb,KAAK,KAAK,aAAa,EAAE;QAC3B,OAAOV,kBAAkB,CAACD,KAAK,EAAEuB,MAAM,EAAEL,WAAW,CAACM,KAAK,CAAC,IAAID,MAAM,CAAC;MACxE;MACA,MAAME,IAAI,GAAG,GAAGd,KAAK,IAAIY,MAAM,EAAE;MACjC,OAAOf,aAAa,CAACR,KAAK,EAAEyB,IAAI,EAAEP,WAAW,CAACM,KAAK,CAAC,IAAID,MAAM,CAAC;IACjE,CAAC,CAAC;IACF,OAAOR,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,GAAGS,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC;EAClD,CAAC;AACH;AAEA,SAASR,QAAQ,EAAEf,SAAS,EAAEY,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}