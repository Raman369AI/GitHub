{"ast":null,"code":"function isDecimal(value) {\n  return !Number.isInteger(parseFloat(value.toString()));\n}\nfunction replaceWhiteSpace(value, replaceValue = \"-\") {\n  return value.replace(/\\s+/g, replaceValue);\n}\nfunction escape(value) {\n  const valueStr = replaceWhiteSpace(value.toString());\n  if (valueStr.includes(\"\\\\.\")) return value;\n  return isDecimal(value) ? valueStr.replace(\".\", `\\\\.`) : value;\n}\nfunction addPrefix(value, prefix = \"\") {\n  return [prefix, escape(value)].filter(Boolean).join(\"-\");\n}\nfunction toVarRef(name, fallback) {\n  return `var(${escape(name)}${fallback ? `, ${fallback}` : \"\"})`;\n}\nfunction toVar(value, prefix = \"\") {\n  return `--${addPrefix(value, prefix)}`;\n}\nfunction cssVar(name, options) {\n  const cssVariable = toVar(name, options?.prefix);\n  return {\n    variable: cssVariable,\n    reference: toVarRef(cssVariable, getFallback(options?.fallback))\n  };\n}\nfunction getFallback(fallback) {\n  if (typeof fallback === \"string\") return fallback;\n  return fallback?.reference;\n}\nexport { addPrefix, cssVar, isDecimal, toVar, toVarRef };","map":{"version":3,"names":["isDecimal","value","Number","isInteger","parseFloat","toString","replaceWhiteSpace","replaceValue","replace","escape","valueStr","includes","addPrefix","prefix","filter","Boolean","join","toVarRef","name","fallback","toVar","cssVar","options","cssVariable","variable","reference","getFallback"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/theme-tools/dist/esm/css-var.mjs"],"sourcesContent":["function isDecimal(value) {\n  return !Number.isInteger(parseFloat(value.toString()));\n}\nfunction replaceWhiteSpace(value, replaceValue = \"-\") {\n  return value.replace(/\\s+/g, replaceValue);\n}\nfunction escape(value) {\n  const valueStr = replaceWhiteSpace(value.toString());\n  if (valueStr.includes(\"\\\\.\"))\n    return value;\n  return isDecimal(value) ? valueStr.replace(\".\", `\\\\.`) : value;\n}\nfunction addPrefix(value, prefix = \"\") {\n  return [prefix, escape(value)].filter(Boolean).join(\"-\");\n}\nfunction toVarRef(name, fallback) {\n  return `var(${escape(name)}${fallback ? `, ${fallback}` : \"\"})`;\n}\nfunction toVar(value, prefix = \"\") {\n  return `--${addPrefix(value, prefix)}`;\n}\nfunction cssVar(name, options) {\n  const cssVariable = toVar(name, options?.prefix);\n  return {\n    variable: cssVariable,\n    reference: toVarRef(cssVariable, getFallback(options?.fallback))\n  };\n}\nfunction getFallback(fallback) {\n  if (typeof fallback === \"string\")\n    return fallback;\n  return fallback?.reference;\n}\n\nexport { addPrefix, cssVar, isDecimal, toVar, toVarRef };\n"],"mappings":"AAAA,SAASA,SAASA,CAACC,KAAK,EAAE;EACxB,OAAO,CAACC,MAAM,CAACC,SAAS,CAACC,UAAU,CAACH,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC;AACxD;AACA,SAASC,iBAAiBA,CAACL,KAAK,EAAEM,YAAY,GAAG,GAAG,EAAE;EACpD,OAAON,KAAK,CAACO,OAAO,CAAC,MAAM,EAAED,YAAY,CAAC;AAC5C;AACA,SAASE,MAAMA,CAACR,KAAK,EAAE;EACrB,MAAMS,QAAQ,GAAGJ,iBAAiB,CAACL,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC;EACpD,IAAIK,QAAQ,CAACC,QAAQ,CAAC,KAAK,CAAC,EAC1B,OAAOV,KAAK;EACd,OAAOD,SAAS,CAACC,KAAK,CAAC,GAAGS,QAAQ,CAACF,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,GAAGP,KAAK;AAChE;AACA,SAASW,SAASA,CAACX,KAAK,EAAEY,MAAM,GAAG,EAAE,EAAE;EACrC,OAAO,CAACA,MAAM,EAAEJ,MAAM,CAACR,KAAK,CAAC,CAAC,CAACa,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAC1D;AACA,SAASC,QAAQA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAChC,OAAO,OAAOV,MAAM,CAACS,IAAI,CAAC,GAAGC,QAAQ,GAAG,KAAKA,QAAQ,EAAE,GAAG,EAAE,GAAG;AACjE;AACA,SAASC,KAAKA,CAACnB,KAAK,EAAEY,MAAM,GAAG,EAAE,EAAE;EACjC,OAAO,KAAKD,SAAS,CAACX,KAAK,EAAEY,MAAM,CAAC,EAAE;AACxC;AACA,SAASQ,MAAMA,CAACH,IAAI,EAAEI,OAAO,EAAE;EAC7B,MAAMC,WAAW,GAAGH,KAAK,CAACF,IAAI,EAAEI,OAAO,EAAET,MAAM,CAAC;EAChD,OAAO;IACLW,QAAQ,EAAED,WAAW;IACrBE,SAAS,EAAER,QAAQ,CAACM,WAAW,EAAEG,WAAW,CAACJ,OAAO,EAAEH,QAAQ,CAAC;EACjE,CAAC;AACH;AACA,SAASO,WAAWA,CAACP,QAAQ,EAAE;EAC7B,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAC9B,OAAOA,QAAQ;EACjB,OAAOA,QAAQ,EAAEM,SAAS;AAC5B;AAEA,SAASb,SAAS,EAAES,MAAM,EAAErB,SAAS,EAAEoB,KAAK,EAAEH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}