{"ast":null,"code":"'use client';\n\nimport { useCallbackRef, useControllableState, useUpdateEffect, usePanEvent, mergeRefs } from '@chakra-ui/hooks';\nimport { clampValue, valueToPercent, percentToValue, roundValueToStep, ariaAttr, dataAttr, callAllHandlers } from '@chakra-ui/utils';\nimport { useState, useRef, useId, useCallback, useMemo } from 'react';\nimport { getStyles, orient, getIsReversed, getIds } from './slider-utils.mjs';\nfunction useRangeSlider(props) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    minStepsBetweenThumbs = 0,\n    ...htmlProps\n  } = props;\n  const onChangeStart = useCallbackRef(onChangeStartProp);\n  const onChangeEnd = useCallbackRef(onChangeEndProp);\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation\n  });\n  const [valueState, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? [25, 75],\n    onChange\n  });\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(`[range-slider] You passed an invalid value for \\`value\\` or \\`defaultValue\\`, expected \\`Array\\` but got \\`${typeof valueState}\\``);\n  }\n  const [isDragging, setDragging] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const isInteractive = !(isDisabled || isReadOnly);\n  const initialValue = useRef(valueState);\n  const value = valueState.map(val => clampValue(val, min, max));\n  const spacing = minStepsBetweenThumbs * step;\n  const valueBounds = getValueBounds(value, min, max, spacing);\n  const stateRef = useRef({\n    eventSource: null,\n    value: [],\n    valueBounds: []\n  });\n  stateRef.current.value = value;\n  stateRef.current.valueBounds = valueBounds;\n  const reversedValue = value.map(val => max - val + min);\n  const thumbValues = isReversed ? reversedValue : value;\n  const thumbPercents = thumbValues.map(val => valueToPercent(val, min, max));\n  const isVertical = orientation === \"vertical\";\n  const trackRef = useRef(null);\n  const rootRef = useRef(null);\n  const reactId = useId();\n  const uuid = idProp ?? reactId;\n  const ids = getIds(uuid);\n  const getValueFromPointer = useCallback(event => {\n    if (!trackRef.current) return;\n    stateRef.current.eventSource = \"pointer\";\n    const rect = trackRef.current.getBoundingClientRect();\n    const {\n      clientX,\n      clientY\n    } = event.touches?.[0] ?? event;\n    const diff = isVertical ? rect.bottom - clientY : clientX - rect.left;\n    const length = isVertical ? rect.height : rect.width;\n    let percent = diff / length;\n    if (isReversed) percent = 1 - percent;\n    return percentToValue(percent, min, max);\n  }, [isVertical, isReversed, max, min]);\n  const tenSteps = (max - min) / 10;\n  const oneStep = step || (max - min) / 100;\n  const actions = useMemo(() => ({\n    setValueAtIndex(index, val) {\n      if (!isInteractive) return;\n      const bounds = stateRef.current.valueBounds[index];\n      val = parseFloat(roundValueToStep(val, bounds.min, oneStep));\n      val = clampValue(val, bounds.min, bounds.max);\n      const next = [...stateRef.current.value];\n      next[index] = val;\n      setValue(next);\n    },\n    setActiveIndex,\n    stepUp(index, step2 = oneStep) {\n      const valueAtIndex = stateRef.current.value[index];\n      const next = isReversed ? valueAtIndex - step2 : valueAtIndex + step2;\n      actions.setValueAtIndex(index, next);\n    },\n    stepDown(index, step2 = oneStep) {\n      const valueAtIndex = stateRef.current.value[index];\n      const next = isReversed ? valueAtIndex + step2 : valueAtIndex - step2;\n      actions.setValueAtIndex(index, next);\n    },\n    reset() {\n      setValue(initialValue.current);\n    }\n  }), [oneStep, isReversed, setValue, isInteractive]);\n  const onKeyDown = useCallback(event => {\n    const eventKey = event.key;\n    const keyMap = {\n      ArrowRight: () => actions.stepUp(activeIndex),\n      ArrowUp: () => actions.stepUp(activeIndex),\n      ArrowLeft: () => actions.stepDown(activeIndex),\n      ArrowDown: () => actions.stepDown(activeIndex),\n      PageUp: () => actions.stepUp(activeIndex, tenSteps),\n      PageDown: () => actions.stepDown(activeIndex, tenSteps),\n      Home: () => {\n        const {\n          min: value2\n        } = valueBounds[activeIndex];\n        actions.setValueAtIndex(activeIndex, value2);\n      },\n      End: () => {\n        const {\n          max: value2\n        } = valueBounds[activeIndex];\n        actions.setValueAtIndex(activeIndex, value2);\n      }\n    };\n    const action = keyMap[eventKey];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      stateRef.current.eventSource = \"keyboard\";\n    }\n  }, [actions, activeIndex, tenSteps, valueBounds]);\n  const {\n    getThumbStyle,\n    rootStyle,\n    trackStyle,\n    innerTrackStyle\n  } = useMemo(() => getStyles({\n    isReversed,\n    orientation,\n    thumbPercents\n  }), [isReversed, orientation, thumbPercents]);\n  const focusThumb = useCallback(index => {\n    const idx = index ?? activeIndex;\n    if (idx !== -1 && focusThumbOnChange) {\n      const id = ids.getThumb(idx);\n      const thumb = rootRef.current?.ownerDocument.getElementById(id);\n      if (thumb) {\n        setTimeout(() => thumb.focus());\n      }\n    }\n  }, [focusThumbOnChange, activeIndex, ids]);\n  useUpdateEffect(() => {\n    if (stateRef.current.eventSource === \"keyboard\") {\n      onChangeEnd?.(stateRef.current.value);\n    }\n  }, [value, onChangeEnd]);\n  const onPanSessionStart = event => {\n    const pointValue = getValueFromPointer(event) || 0;\n    const distances = stateRef.current.value.map(val => Math.abs(val - pointValue));\n    const closest = Math.min(...distances);\n    let index = distances.indexOf(closest);\n    const thumbsAtPosition = distances.filter(distance => distance === closest);\n    const isThumbStacked = thumbsAtPosition.length > 1;\n    if (isThumbStacked && pointValue > stateRef.current.value[index]) {\n      index = index + thumbsAtPosition.length - 1;\n    }\n    setActiveIndex(index);\n    actions.setValueAtIndex(index, pointValue);\n    focusThumb(index);\n  };\n  const onPan = event => {\n    if (activeIndex == -1) return;\n    const pointValue = getValueFromPointer(event) || 0;\n    setActiveIndex(activeIndex);\n    actions.setValueAtIndex(activeIndex, pointValue);\n    focusThumb(activeIndex);\n  };\n  usePanEvent(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive) return;\n      setDragging(true);\n      onPanSessionStart(event);\n      onChangeStart?.(stateRef.current.value);\n    },\n    onPanSessionEnd() {\n      if (!isInteractive) return;\n      setDragging(false);\n      onChangeEnd?.(stateRef.current.value);\n    },\n    onPan(event) {\n      if (!isInteractive) return;\n      onPan(event);\n    }\n  });\n  const getRootProps = useCallback((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ...htmlProps,\n      id: ids.root,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: {\n        ...props2.style,\n        ...rootStyle\n      }\n    };\n  }, [htmlProps, isDisabled, isFocused, rootStyle, ids]);\n  const getTrackProps = useCallback((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref: mergeRefs(ref, trackRef),\n      id: ids.track,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: {\n        ...props2.style,\n        ...trackStyle\n      }\n    };\n  }, [isDisabled, trackStyle, ids]);\n  const getInnerTrackProps = useCallback((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref,\n      id: ids.innerTrack,\n      style: {\n        ...props2.style,\n        ...innerTrackStyle\n      }\n    };\n  }, [innerTrackStyle, ids]);\n  const getThumbProps = useCallback((props2, ref = null) => {\n    const {\n      index,\n      ...rest\n    } = props2;\n    const valueAtIndex = value[index];\n    if (valueAtIndex == null) {\n      throw new TypeError(`[range-slider > thumb] Cannot find value at index \\`${index}\\`. The \\`value\\` or \\`defaultValue\\` length is : ${value.length}`);\n    }\n    const bounds = valueBounds[index];\n    return {\n      ...rest,\n      ref,\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : void 0,\n      id: ids.getThumb(index),\n      \"data-active\": dataAttr(isDragging && activeIndex === index),\n      \"aria-valuetext\": getAriaValueText?.(valueAtIndex) ?? ariaValueText?.[index],\n      \"aria-valuemin\": bounds.min,\n      \"aria-valuemax\": bounds.max,\n      \"aria-valuenow\": valueAtIndex,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel?.[index],\n      \"aria-labelledby\": ariaLabel?.[index] ? void 0 : ariaLabelledBy?.[index],\n      style: {\n        ...props2.style,\n        ...getThumbStyle(index)\n      },\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, () => {\n        setFocused(true);\n        setActiveIndex(index);\n      }),\n      onBlur: callAllHandlers(props2.onBlur, () => {\n        setFocused(false);\n        setActiveIndex(-1);\n      })\n    };\n  }, [ids, value, valueBounds, isInteractive, isDragging, activeIndex, getAriaValueText, ariaValueText, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown, setFocused]);\n  const getOutputProps = useCallback((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref,\n      id: ids.output,\n      htmlFor: value.map((v, i) => ids.getThumb(i)).join(\" \"),\n      \"aria-live\": \"off\"\n    };\n  }, [ids, value]);\n  const getMarkerProps = useCallback((props2, ref = null) => {\n    const {\n      value: v,\n      ...rest\n    } = props2;\n    const isInRange = !(v < min || v > max);\n    const isHighlighted = v >= value[0] && v <= value[value.length - 1];\n    let percent = valueToPercent(v, min, max);\n    percent = isReversed ? 100 - percent : percent;\n    const markerStyle = {\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: `${percent}%`\n        },\n        horizontal: {\n          left: `${percent}%`\n        }\n      })\n    };\n    return {\n      ...rest,\n      ref,\n      id: ids.getMarker(props2.value),\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: {\n        ...props2.style,\n        ...markerStyle\n      }\n    };\n  }, [isDisabled, isReversed, max, min, orientation, value, ids]);\n  const getInputProps = useCallback((props2, ref = null) => {\n    const {\n      index,\n      ...rest\n    } = props2;\n    return {\n      ...rest,\n      ref,\n      id: ids.getInput(index),\n      type: \"hidden\",\n      value: value[index],\n      name: Array.isArray(name) ? name[index] : `${name}-${index}`\n    };\n  }, [name, value, ids]);\n  const state = {\n    value,\n    isFocused,\n    isDragging,\n    getThumbPercent: index => thumbPercents[index],\n    getThumbMinValue: index => valueBounds[index].min,\n    getThumbMaxValue: index => valueBounds[index].max\n  };\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n    getOutputProps\n  };\n}\nfunction getValueBounds(arr, min, max, spacing) {\n  return arr.map((v, i) => {\n    const _min = i === 0 ? min : arr[i - 1] + spacing;\n    const _max = i === arr.length - 1 ? max : arr[i + 1] - spacing;\n    return {\n      min: _min,\n      max: _max\n    };\n  });\n}\nexport { useRangeSlider };","map":{"version":3,"names":["useCallbackRef","useControllableState","useUpdateEffect","usePanEvent","mergeRefs","clampValue","valueToPercent","percentToValue","roundValueToStep","ariaAttr","dataAttr","callAllHandlers","useState","useRef","useId","useCallback","useMemo","getStyles","orient","getIsReversed","getIds","useRangeSlider","props","min","max","onChange","value","valueProp","defaultValue","isReversed","isReversedProp","direction","orientation","id","idProp","isDisabled","isReadOnly","onChangeStart","onChangeStartProp","onChangeEnd","onChangeEndProp","step","getAriaValueText","getAriaValueTextProp","ariaValueText","ariaLabel","ariaLabelledBy","name","focusThumbOnChange","minStepsBetweenThumbs","htmlProps","valueState","setValue","Array","isArray","TypeError","isDragging","setDragging","isFocused","setFocused","activeIndex","setActiveIndex","isInteractive","initialValue","map","val","spacing","valueBounds","getValueBounds","stateRef","eventSource","current","reversedValue","thumbValues","thumbPercents","isVertical","trackRef","rootRef","reactId","uuid","ids","getValueFromPointer","event","rect","getBoundingClientRect","clientX","clientY","touches","diff","bottom","left","length","height","width","percent","tenSteps","oneStep","actions","setValueAtIndex","index","bounds","parseFloat","next","stepUp","step2","valueAtIndex","stepDown","reset","onKeyDown","eventKey","key","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","value2","End","action","preventDefault","stopPropagation","getThumbStyle","rootStyle","trackStyle","innerTrackStyle","focusThumb","idx","getThumb","thumb","ownerDocument","getElementById","setTimeout","focus","onPanSessionStart","pointValue","distances","Math","abs","closest","indexOf","thumbsAtPosition","filter","distance","isThumbStacked","onPan","onPanSessionEnd","getRootProps","props2","ref","root","tabIndex","style","getTrackProps","track","getInnerTrackProps","innerTrack","getThumbProps","rest","role","onFocus","onBlur","getOutputProps","output","htmlFor","v","i","join","getMarkerProps","isInRange","isHighlighted","markerStyle","position","pointerEvents","vertical","horizontal","getMarker","getInputProps","getInput","type","state","getThumbPercent","getThumbMinValue","getThumbMaxValue","arr","_min","_max"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/slider/use-range-slider.mjs"],"sourcesContent":["'use client';\nimport { useCallbackRef, useControllableState, useUpdateEffect, usePanEvent, mergeRefs } from '@chakra-ui/hooks';\nimport { clampValue, valueToPercent, percentToValue, roundValueToStep, ariaAttr, dataAttr, callAllHandlers } from '@chakra-ui/utils';\nimport { useState, useRef, useId, useCallback, useMemo } from 'react';\nimport { getStyles, orient, getIsReversed, getIds } from './slider-utils.mjs';\n\nfunction useRangeSlider(props) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    minStepsBetweenThumbs = 0,\n    ...htmlProps\n  } = props;\n  const onChangeStart = useCallbackRef(onChangeStartProp);\n  const onChangeEnd = useCallbackRef(onChangeEndProp);\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation\n  });\n  const [valueState, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? [25, 75],\n    onChange\n  });\n  if (!Array.isArray(valueState)) {\n    throw new TypeError(\n      `[range-slider] You passed an invalid value for \\`value\\` or \\`defaultValue\\`, expected \\`Array\\` but got \\`${typeof valueState}\\``\n    );\n  }\n  const [isDragging, setDragging] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const isInteractive = !(isDisabled || isReadOnly);\n  const initialValue = useRef(valueState);\n  const value = valueState.map((val) => clampValue(val, min, max));\n  const spacing = minStepsBetweenThumbs * step;\n  const valueBounds = getValueBounds(value, min, max, spacing);\n  const stateRef = useRef({\n    eventSource: null,\n    value: [],\n    valueBounds: []\n  });\n  stateRef.current.value = value;\n  stateRef.current.valueBounds = valueBounds;\n  const reversedValue = value.map((val) => max - val + min);\n  const thumbValues = isReversed ? reversedValue : value;\n  const thumbPercents = thumbValues.map((val) => valueToPercent(val, min, max));\n  const isVertical = orientation === \"vertical\";\n  const trackRef = useRef(null);\n  const rootRef = useRef(null);\n  const reactId = useId();\n  const uuid = idProp ?? reactId;\n  const ids = getIds(uuid);\n  const getValueFromPointer = useCallback(\n    (event) => {\n      if (!trackRef.current)\n        return;\n      stateRef.current.eventSource = \"pointer\";\n      const rect = trackRef.current.getBoundingClientRect();\n      const { clientX, clientY } = event.touches?.[0] ?? event;\n      const diff = isVertical ? rect.bottom - clientY : clientX - rect.left;\n      const length = isVertical ? rect.height : rect.width;\n      let percent = diff / length;\n      if (isReversed)\n        percent = 1 - percent;\n      return percentToValue(percent, min, max);\n    },\n    [isVertical, isReversed, max, min]\n  );\n  const tenSteps = (max - min) / 10;\n  const oneStep = step || (max - min) / 100;\n  const actions = useMemo(\n    () => ({\n      setValueAtIndex(index, val) {\n        if (!isInteractive)\n          return;\n        const bounds = stateRef.current.valueBounds[index];\n        val = parseFloat(roundValueToStep(val, bounds.min, oneStep));\n        val = clampValue(val, bounds.min, bounds.max);\n        const next = [...stateRef.current.value];\n        next[index] = val;\n        setValue(next);\n      },\n      setActiveIndex,\n      stepUp(index, step2 = oneStep) {\n        const valueAtIndex = stateRef.current.value[index];\n        const next = isReversed ? valueAtIndex - step2 : valueAtIndex + step2;\n        actions.setValueAtIndex(index, next);\n      },\n      stepDown(index, step2 = oneStep) {\n        const valueAtIndex = stateRef.current.value[index];\n        const next = isReversed ? valueAtIndex + step2 : valueAtIndex - step2;\n        actions.setValueAtIndex(index, next);\n      },\n      reset() {\n        setValue(initialValue.current);\n      }\n    }),\n    [oneStep, isReversed, setValue, isInteractive]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      const eventKey = event.key;\n      const keyMap = {\n        ArrowRight: () => actions.stepUp(activeIndex),\n        ArrowUp: () => actions.stepUp(activeIndex),\n        ArrowLeft: () => actions.stepDown(activeIndex),\n        ArrowDown: () => actions.stepDown(activeIndex),\n        PageUp: () => actions.stepUp(activeIndex, tenSteps),\n        PageDown: () => actions.stepDown(activeIndex, tenSteps),\n        Home: () => {\n          const { min: value2 } = valueBounds[activeIndex];\n          actions.setValueAtIndex(activeIndex, value2);\n        },\n        End: () => {\n          const { max: value2 } = valueBounds[activeIndex];\n          actions.setValueAtIndex(activeIndex, value2);\n        }\n      };\n      const action = keyMap[eventKey];\n      if (action) {\n        event.preventDefault();\n        event.stopPropagation();\n        action(event);\n        stateRef.current.eventSource = \"keyboard\";\n      }\n    },\n    [actions, activeIndex, tenSteps, valueBounds]\n  );\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } = useMemo(\n    () => getStyles({\n      isReversed,\n      orientation,\n      thumbPercents\n    }),\n    [isReversed, orientation, thumbPercents]\n  );\n  const focusThumb = useCallback(\n    (index) => {\n      const idx = index ?? activeIndex;\n      if (idx !== -1 && focusThumbOnChange) {\n        const id = ids.getThumb(idx);\n        const thumb = rootRef.current?.ownerDocument.getElementById(id);\n        if (thumb) {\n          setTimeout(() => thumb.focus());\n        }\n      }\n    },\n    [focusThumbOnChange, activeIndex, ids]\n  );\n  useUpdateEffect(() => {\n    if (stateRef.current.eventSource === \"keyboard\") {\n      onChangeEnd?.(stateRef.current.value);\n    }\n  }, [value, onChangeEnd]);\n  const onPanSessionStart = (event) => {\n    const pointValue = getValueFromPointer(event) || 0;\n    const distances = stateRef.current.value.map(\n      (val) => Math.abs(val - pointValue)\n    );\n    const closest = Math.min(...distances);\n    let index = distances.indexOf(closest);\n    const thumbsAtPosition = distances.filter(\n      (distance) => distance === closest\n    );\n    const isThumbStacked = thumbsAtPosition.length > 1;\n    if (isThumbStacked && pointValue > stateRef.current.value[index]) {\n      index = index + thumbsAtPosition.length - 1;\n    }\n    setActiveIndex(index);\n    actions.setValueAtIndex(index, pointValue);\n    focusThumb(index);\n  };\n  const onPan = (event) => {\n    if (activeIndex == -1)\n      return;\n    const pointValue = getValueFromPointer(event) || 0;\n    setActiveIndex(activeIndex);\n    actions.setValueAtIndex(activeIndex, pointValue);\n    focusThumb(activeIndex);\n  };\n  usePanEvent(rootRef, {\n    onPanSessionStart(event) {\n      if (!isInteractive)\n        return;\n      setDragging(true);\n      onPanSessionStart(event);\n      onChangeStart?.(stateRef.current.value);\n    },\n    onPanSessionEnd() {\n      if (!isInteractive)\n        return;\n      setDragging(false);\n      onChangeEnd?.(stateRef.current.value);\n    },\n    onPan(event) {\n      if (!isInteractive)\n        return;\n      onPan(event);\n    }\n  });\n  const getRootProps = useCallback(\n    (props2 = {}, ref = null) => {\n      return {\n        ...props2,\n        ...htmlProps,\n        id: ids.root,\n        ref: mergeRefs(ref, rootRef),\n        tabIndex: -1,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"data-focused\": dataAttr(isFocused),\n        style: { ...props2.style, ...rootStyle }\n      };\n    },\n    [htmlProps, isDisabled, isFocused, rootStyle, ids]\n  );\n  const getTrackProps = useCallback(\n    (props2 = {}, ref = null) => {\n      return {\n        ...props2,\n        ref: mergeRefs(ref, trackRef),\n        id: ids.track,\n        \"data-disabled\": dataAttr(isDisabled),\n        style: { ...props2.style, ...trackStyle }\n      };\n    },\n    [isDisabled, trackStyle, ids]\n  );\n  const getInnerTrackProps = useCallback(\n    (props2 = {}, ref = null) => {\n      return {\n        ...props2,\n        ref,\n        id: ids.innerTrack,\n        style: {\n          ...props2.style,\n          ...innerTrackStyle\n        }\n      };\n    },\n    [innerTrackStyle, ids]\n  );\n  const getThumbProps = useCallback(\n    (props2, ref = null) => {\n      const { index, ...rest } = props2;\n      const valueAtIndex = value[index];\n      if (valueAtIndex == null) {\n        throw new TypeError(\n          `[range-slider > thumb] Cannot find value at index \\`${index}\\`. The \\`value\\` or \\`defaultValue\\` length is : ${value.length}`\n        );\n      }\n      const bounds = valueBounds[index];\n      return {\n        ...rest,\n        ref,\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : void 0,\n        id: ids.getThumb(index),\n        \"data-active\": dataAttr(isDragging && activeIndex === index),\n        \"aria-valuetext\": getAriaValueText?.(valueAtIndex) ?? ariaValueText?.[index],\n        \"aria-valuemin\": bounds.min,\n        \"aria-valuemax\": bounds.max,\n        \"aria-valuenow\": valueAtIndex,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel?.[index],\n        \"aria-labelledby\": ariaLabel?.[index] ? void 0 : ariaLabelledBy?.[index],\n        style: { ...props2.style, ...getThumbStyle(index) },\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props2.onFocus, () => {\n          setFocused(true);\n          setActiveIndex(index);\n        }),\n        onBlur: callAllHandlers(props2.onBlur, () => {\n          setFocused(false);\n          setActiveIndex(-1);\n        })\n      };\n    },\n    [\n      ids,\n      value,\n      valueBounds,\n      isInteractive,\n      isDragging,\n      activeIndex,\n      getAriaValueText,\n      ariaValueText,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown,\n      setFocused\n    ]\n  );\n  const getOutputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      return {\n        ...props2,\n        ref,\n        id: ids.output,\n        htmlFor: value.map((v, i) => ids.getThumb(i)).join(\" \"),\n        \"aria-live\": \"off\"\n      };\n    },\n    [ids, value]\n  );\n  const getMarkerProps = useCallback(\n    (props2, ref = null) => {\n      const { value: v, ...rest } = props2;\n      const isInRange = !(v < min || v > max);\n      const isHighlighted = v >= value[0] && v <= value[value.length - 1];\n      let percent = valueToPercent(v, min, max);\n      percent = isReversed ? 100 - percent : percent;\n      const markerStyle = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: { bottom: `${percent}%` },\n          horizontal: { left: `${percent}%` }\n        })\n      };\n      return {\n        ...rest,\n        ref,\n        id: ids.getMarker(props2.value),\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props2.style,\n          ...markerStyle\n        }\n      };\n    },\n    [isDisabled, isReversed, max, min, orientation, value, ids]\n  );\n  const getInputProps = useCallback(\n    (props2, ref = null) => {\n      const { index, ...rest } = props2;\n      return {\n        ...rest,\n        ref,\n        id: ids.getInput(index),\n        type: \"hidden\",\n        value: value[index],\n        name: Array.isArray(name) ? name[index] : `${name}-${index}`\n      };\n    },\n    [name, value, ids]\n  );\n  const state = {\n    value,\n    isFocused,\n    isDragging,\n    getThumbPercent: (index) => thumbPercents[index],\n    getThumbMinValue: (index) => valueBounds[index].min,\n    getThumbMaxValue: (index) => valueBounds[index].max\n  };\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps,\n    getOutputProps\n  };\n}\nfunction getValueBounds(arr, min, max, spacing) {\n  return arr.map((v, i) => {\n    const _min = i === 0 ? min : arr[i - 1] + spacing;\n    const _max = i === arr.length - 1 ? max : arr[i + 1] - spacing;\n    return { min: _min, max: _max };\n  });\n}\n\nexport { useRangeSlider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}