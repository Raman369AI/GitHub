{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment, jsxs } from 'react/jsx-runtime';\nimport { omitThemingProps, getCSSVar } from '@chakra-ui/styled-system';\nimport { omit, pick } from '@chakra-ui/utils';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { isValidElement, Children, cloneElement } from 'react';\nimport { scale } from './tooltip.transition.mjs';\nimport { useTooltip } from './use-tooltip.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\nimport { cssVars } from '../popper/utils.mjs';\nimport { Portal } from '../portal/portal.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nconst MotionDiv = chakra(motion.div);\nconst Tooltip = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Tooltip\", props);\n  const ownProps = omitThemingProps(props);\n  const theme = useTheme();\n  const {\n    children,\n    label,\n    shouldWrapChildren,\n    \"aria-label\": ariaLabel,\n    hasArrow,\n    bg,\n    portalProps,\n    background,\n    backgroundColor,\n    bgColor,\n    motionProps,\n    animatePresenceProps,\n    ...rest\n  } = ownProps;\n  const userDefinedBg = background ?? backgroundColor ?? bg ?? bgColor;\n  if (userDefinedBg) {\n    styles.bg = userDefinedBg;\n    const bgVar = getCSSVar(theme, \"colors\", userDefinedBg);\n    styles[cssVars.arrowBg.var] = bgVar;\n  }\n  const tooltip = useTooltip({\n    ...rest,\n    direction: theme.direction\n  });\n  const shouldWrap = !isValidElement(children) || shouldWrapChildren;\n  let trigger;\n  if (shouldWrap) {\n    trigger = /* @__PURE__ */jsx(chakra.span, {\n      display: \"inline-block\",\n      tabIndex: 0,\n      ...tooltip.getTriggerProps(),\n      children\n    });\n  } else {\n    const child = Children.only(children);\n    trigger = cloneElement(child, tooltip.getTriggerProps(child.props, child.ref));\n  }\n  const hasAriaLabel = !!ariaLabel;\n  const _tooltipProps = tooltip.getTooltipProps({}, ref);\n  const tooltipProps = hasAriaLabel ? omit(_tooltipProps, [\"role\", \"id\"]) : _tooltipProps;\n  const srOnlyProps = pick(_tooltipProps, [\"role\", \"id\"]);\n  if (!label) {\n    return /* @__PURE__ */jsx(Fragment, {\n      children\n    });\n  }\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [trigger, /* @__PURE__ */jsx(AnimatePresence, {\n      ...animatePresenceProps,\n      children: tooltip.isOpen && /* @__PURE__ */jsx(Portal, {\n        ...portalProps,\n        children: /* @__PURE__ */jsx(chakra.div, {\n          ...tooltip.getTooltipPositionerProps(),\n          __css: {\n            zIndex: styles.zIndex,\n            pointerEvents: \"none\"\n          },\n          children: /* @__PURE__ */jsxs(MotionDiv, {\n            variants: scale,\n            initial: \"exit\",\n            animate: \"enter\",\n            exit: \"exit\",\n            ...motionProps,\n            ...tooltipProps,\n            __css: styles,\n            children: [label, hasAriaLabel && /* @__PURE__ */jsx(chakra.span, {\n              srOnly: true,\n              ...srOnlyProps,\n              children: ariaLabel\n            }), hasArrow && /* @__PURE__ */jsx(chakra.div, {\n              \"data-popper-arrow\": true,\n              className: \"chakra-tooltip__arrow-wrapper\",\n              children: /* @__PURE__ */jsx(chakra.div, {\n                \"data-popper-arrow-inner\": true,\n                className: \"chakra-tooltip__arrow\",\n                __css: {\n                  bg: styles.bg\n                }\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n});\nTooltip.displayName = \"Tooltip\";\nexport { Tooltip };","map":{"version":3,"names":["jsx","Fragment","jsxs","omitThemingProps","getCSSVar","omit","pick","motion","AnimatePresence","isValidElement","Children","cloneElement","scale","useTooltip","useTheme","cssVars","Portal","chakra","forwardRef","useStyleConfig","MotionDiv","div","Tooltip","props","ref","styles","ownProps","theme","children","label","shouldWrapChildren","ariaLabel","hasArrow","bg","portalProps","background","backgroundColor","bgColor","motionProps","animatePresenceProps","rest","userDefinedBg","bgVar","arrowBg","var","tooltip","direction","shouldWrap","trigger","span","display","tabIndex","getTriggerProps","child","only","hasAriaLabel","_tooltipProps","getTooltipProps","tooltipProps","srOnlyProps","isOpen","getTooltipPositionerProps","__css","zIndex","pointerEvents","variants","initial","animate","exit","srOnly","className","displayName"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/tooltip/tooltip.mjs"],"sourcesContent":["'use client';\nimport { jsx, Fragment, jsxs } from 'react/jsx-runtime';\nimport { omitThemingProps, getCSSVar } from '@chakra-ui/styled-system';\nimport { omit, pick } from '@chakra-ui/utils';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { isValidElement, Children, cloneElement } from 'react';\nimport { scale } from './tooltip.transition.mjs';\nimport { useTooltip } from './use-tooltip.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\nimport { cssVars } from '../popper/utils.mjs';\nimport { Portal } from '../portal/portal.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\n\nconst MotionDiv = chakra(motion.div);\nconst Tooltip = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Tooltip\", props);\n  const ownProps = omitThemingProps(props);\n  const theme = useTheme();\n  const {\n    children,\n    label,\n    shouldWrapChildren,\n    \"aria-label\": ariaLabel,\n    hasArrow,\n    bg,\n    portalProps,\n    background,\n    backgroundColor,\n    bgColor,\n    motionProps,\n    animatePresenceProps,\n    ...rest\n  } = ownProps;\n  const userDefinedBg = background ?? backgroundColor ?? bg ?? bgColor;\n  if (userDefinedBg) {\n    styles.bg = userDefinedBg;\n    const bgVar = getCSSVar(theme, \"colors\", userDefinedBg);\n    styles[cssVars.arrowBg.var] = bgVar;\n  }\n  const tooltip = useTooltip({ ...rest, direction: theme.direction });\n  const shouldWrap = !isValidElement(children) || shouldWrapChildren;\n  let trigger;\n  if (shouldWrap) {\n    trigger = /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        display: \"inline-block\",\n        tabIndex: 0,\n        ...tooltip.getTriggerProps(),\n        children\n      }\n    );\n  } else {\n    const child = Children.only(children);\n    trigger = cloneElement(\n      child,\n      tooltip.getTriggerProps(child.props, child.ref)\n    );\n  }\n  const hasAriaLabel = !!ariaLabel;\n  const _tooltipProps = tooltip.getTooltipProps({}, ref);\n  const tooltipProps = hasAriaLabel ? omit(_tooltipProps, [\"role\", \"id\"]) : _tooltipProps;\n  const srOnlyProps = pick(_tooltipProps, [\"role\", \"id\"]);\n  if (!label) {\n    return /* @__PURE__ */ jsx(Fragment, { children });\n  }\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    trigger,\n    /* @__PURE__ */ jsx(AnimatePresence, { ...animatePresenceProps, children: tooltip.isOpen && /* @__PURE__ */ jsx(Portal, { ...portalProps, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...tooltip.getTooltipPositionerProps(),\n        __css: {\n          zIndex: styles.zIndex,\n          pointerEvents: \"none\"\n        },\n        children: /* @__PURE__ */ jsxs(\n          MotionDiv,\n          {\n            variants: scale,\n            initial: \"exit\",\n            animate: \"enter\",\n            exit: \"exit\",\n            ...motionProps,\n            ...tooltipProps,\n            __css: styles,\n            children: [\n              label,\n              hasAriaLabel && /* @__PURE__ */ jsx(chakra.span, { srOnly: true, ...srOnlyProps, children: ariaLabel }),\n              hasArrow && /* @__PURE__ */ jsx(\n                chakra.div,\n                {\n                  \"data-popper-arrow\": true,\n                  className: \"chakra-tooltip__arrow-wrapper\",\n                  children: /* @__PURE__ */ jsx(\n                    chakra.div,\n                    {\n                      \"data-popper-arrow-inner\": true,\n                      className: \"chakra-tooltip__arrow\",\n                      __css: { bg: styles.bg }\n                    }\n                  )\n                }\n              )\n            ]\n          }\n        )\n      }\n    ) }) })\n  ] });\n});\nTooltip.displayName = \"Tooltip\";\n\nexport { Tooltip };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}