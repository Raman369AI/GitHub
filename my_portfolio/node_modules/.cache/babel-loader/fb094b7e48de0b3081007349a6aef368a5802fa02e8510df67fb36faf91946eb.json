{"ast":null,"code":"'use client';\n\nimport { createContext } from '@chakra-ui/utils';\nimport { InfoIcon, WarningIcon, CheckIcon } from './alert-icons.mjs';\nimport { Spinner } from '../spinner/spinner.mjs';\nconst [AlertProvider, useAlertContext] = createContext({\n  name: \"AlertContext\",\n  hookName: \"useAlertContext\",\n  providerName: \"<Alert />\"\n});\nconst [AlertStylesProvider, useAlertStyles] = createContext({\n  name: `AlertStylesContext`,\n  hookName: `useAlertStyles`,\n  providerName: \"<Alert />\"\n});\nconst STATUSES = {\n  info: {\n    icon: InfoIcon,\n    colorScheme: \"blue\"\n  },\n  warning: {\n    icon: WarningIcon,\n    colorScheme: \"orange\"\n  },\n  success: {\n    icon: CheckIcon,\n    colorScheme: \"green\"\n  },\n  error: {\n    icon: WarningIcon,\n    colorScheme: \"red\"\n  },\n  loading: {\n    icon: Spinner,\n    colorScheme: \"blue\"\n  }\n};\nfunction getStatusColorScheme(status) {\n  return STATUSES[status].colorScheme;\n}\nfunction getStatusIcon(status) {\n  return STATUSES[status].icon;\n}\nexport { AlertProvider, AlertStylesProvider, getStatusColorScheme, getStatusIcon, useAlertContext, useAlertStyles };","map":{"version":3,"names":["createContext","InfoIcon","WarningIcon","CheckIcon","Spinner","AlertProvider","useAlertContext","name","hookName","providerName","AlertStylesProvider","useAlertStyles","STATUSES","info","icon","colorScheme","warning","success","error","loading","getStatusColorScheme","status","getStatusIcon"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/alert/alert-context.mjs"],"sourcesContent":["'use client';\nimport { createContext } from '@chakra-ui/utils';\nimport { InfoIcon, WarningIcon, CheckIcon } from './alert-icons.mjs';\nimport { Spinner } from '../spinner/spinner.mjs';\n\nconst [AlertProvider, useAlertContext] = createContext({\n  name: \"AlertContext\",\n  hookName: \"useAlertContext\",\n  providerName: \"<Alert />\"\n});\nconst [AlertStylesProvider, useAlertStyles] = createContext({\n  name: `AlertStylesContext`,\n  hookName: `useAlertStyles`,\n  providerName: \"<Alert />\"\n});\nconst STATUSES = {\n  info: { icon: InfoIcon, colorScheme: \"blue\" },\n  warning: { icon: WarningIcon, colorScheme: \"orange\" },\n  success: { icon: CheckIcon, colorScheme: \"green\" },\n  error: { icon: WarningIcon, colorScheme: \"red\" },\n  loading: { icon: Spinner, colorScheme: \"blue\" }\n};\nfunction getStatusColorScheme(status) {\n  return STATUSES[status].colorScheme;\n}\nfunction getStatusIcon(status) {\n  return STATUSES[status].icon;\n}\n\nexport { AlertProvider, AlertStylesProvider, getStatusColorScheme, getStatusIcon, useAlertContext, useAlertStyles };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,mBAAmB;AACpE,SAASC,OAAO,QAAQ,wBAAwB;AAEhD,MAAM,CAACC,aAAa,EAAEC,eAAe,CAAC,GAAGN,aAAa,CAAC;EACrDO,IAAI,EAAE,cAAc;EACpBC,QAAQ,EAAE,iBAAiB;EAC3BC,YAAY,EAAE;AAChB,CAAC,CAAC;AACF,MAAM,CAACC,mBAAmB,EAAEC,cAAc,CAAC,GAAGX,aAAa,CAAC;EAC1DO,IAAI,EAAE,oBAAoB;EAC1BC,QAAQ,EAAE,gBAAgB;EAC1BC,YAAY,EAAE;AAChB,CAAC,CAAC;AACF,MAAMG,QAAQ,GAAG;EACfC,IAAI,EAAE;IAAEC,IAAI,EAAEb,QAAQ;IAAEc,WAAW,EAAE;EAAO,CAAC;EAC7CC,OAAO,EAAE;IAAEF,IAAI,EAAEZ,WAAW;IAAEa,WAAW,EAAE;EAAS,CAAC;EACrDE,OAAO,EAAE;IAAEH,IAAI,EAAEX,SAAS;IAAEY,WAAW,EAAE;EAAQ,CAAC;EAClDG,KAAK,EAAE;IAAEJ,IAAI,EAAEZ,WAAW;IAAEa,WAAW,EAAE;EAAM,CAAC;EAChDI,OAAO,EAAE;IAAEL,IAAI,EAAEV,OAAO;IAAEW,WAAW,EAAE;EAAO;AAChD,CAAC;AACD,SAASK,oBAAoBA,CAACC,MAAM,EAAE;EACpC,OAAOT,QAAQ,CAACS,MAAM,CAAC,CAACN,WAAW;AACrC;AACA,SAASO,aAAaA,CAACD,MAAM,EAAE;EAC7B,OAAOT,QAAQ,CAACS,MAAM,CAAC,CAACP,IAAI;AAC9B;AAEA,SAAST,aAAa,EAAEK,mBAAmB,EAAEU,oBAAoB,EAAEE,aAAa,EAAEhB,eAAe,EAAEK,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}