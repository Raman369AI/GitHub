{"ast":null,"code":"'use client';\n\nimport { useMemo } from 'react';\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return node => {\n    refs.forEach(ref => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport { assignRef, mergeRefs, useMergeRefs };","map":{"version":3,"names":["useMemo","assignRef","ref","value","current","error","Error","mergeRefs","refs","node","forEach","useMergeRefs"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/hooks/dist/esm/use-merge-refs.mjs"],"sourcesContent":["'use client';\nimport { useMemo } from 'react';\n\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\n\nexport { assignRef, mergeRefs, useMergeRefs };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,OAAO,QAAQ,OAAO;AAE/B,SAASC,SAASA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC7B,IAAID,GAAG,IAAI,IAAI,EACb;EACF,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;IAC7BA,GAAG,CAACC,KAAK,CAAC;IACV;EACF;EACA,IAAI;IACFD,GAAG,CAACE,OAAO,GAAGD,KAAK;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwBH,KAAK,aAAaD,GAAG,GAAG,CAAC;EACnE;AACF;AACA,SAASK,SAASA,CAAC,GAAGC,IAAI,EAAE;EAC1B,OAAQC,IAAI,IAAK;IACfD,IAAI,CAACE,OAAO,CAAER,GAAG,IAAK;MACpBD,SAAS,CAACC,GAAG,EAAEO,IAAI,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC;AACH;AACA,SAASE,YAAYA,CAAC,GAAGH,IAAI,EAAE;EAC7B,OAAOR,OAAO,CAAC,MAAMO,SAAS,CAAC,GAAGC,IAAI,CAAC,EAAEA,IAAI,CAAC;AAChD;AAEA,SAASP,SAAS,EAAEM,SAAS,EAAEI,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}