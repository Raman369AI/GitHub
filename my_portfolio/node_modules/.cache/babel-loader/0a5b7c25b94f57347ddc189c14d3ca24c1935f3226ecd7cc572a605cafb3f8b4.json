{"ast":null,"code":"import { t } from '../utils/index.mjs';\nimport { transformFunctions } from '../utils/transform-functions.mjs';\nconst typography = {\n  fontFamily: t.prop(\"fontFamily\", \"fonts\"),\n  fontSize: t.prop(\"fontSize\", \"fontSizes\", transformFunctions.px),\n  fontWeight: t.prop(\"fontWeight\", \"fontWeights\"),\n  lineHeight: t.prop(\"lineHeight\", \"lineHeights\"),\n  letterSpacing: t.prop(\"letterSpacing\", \"letterSpacings\"),\n  textAlign: true,\n  fontStyle: true,\n  textIndent: true,\n  wordBreak: true,\n  overflowWrap: true,\n  textOverflow: true,\n  textTransform: true,\n  whiteSpace: true,\n  isTruncated: {\n    transform(value) {\n      if (value === true) {\n        return {\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          whiteSpace: \"nowrap\"\n        };\n      }\n    }\n  },\n  noOfLines: {\n    static: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      display: \"-webkit-box\",\n      WebkitBoxOrient: \"vertical\",\n      //@ts-ignore\n      WebkitLineClamp: \"var(--chakra-line-clamp)\"\n    },\n    property: \"--chakra-line-clamp\"\n  }\n};\nexport { typography };","map":{"version":3,"names":["t","transformFunctions","typography","fontFamily","prop","fontSize","px","fontWeight","lineHeight","letterSpacing","textAlign","fontStyle","textIndent","wordBreak","overflowWrap","textOverflow","textTransform","whiteSpace","isTruncated","transform","value","overflow","noOfLines","static","display","WebkitBoxOrient","WebkitLineClamp","property"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/styled-system/dist/esm/config/typography.mjs"],"sourcesContent":["import { t } from '../utils/index.mjs';\nimport { transformFunctions } from '../utils/transform-functions.mjs';\n\nconst typography = {\n  fontFamily: t.prop(\"fontFamily\", \"fonts\"),\n  fontSize: t.prop(\"fontSize\", \"fontSizes\", transformFunctions.px),\n  fontWeight: t.prop(\"fontWeight\", \"fontWeights\"),\n  lineHeight: t.prop(\"lineHeight\", \"lineHeights\"),\n  letterSpacing: t.prop(\"letterSpacing\", \"letterSpacings\"),\n  textAlign: true,\n  fontStyle: true,\n  textIndent: true,\n  wordBreak: true,\n  overflowWrap: true,\n  textOverflow: true,\n  textTransform: true,\n  whiteSpace: true,\n  isTruncated: {\n    transform(value) {\n      if (value === true) {\n        return {\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\",\n          whiteSpace: \"nowrap\"\n        };\n      }\n    }\n  },\n  noOfLines: {\n    static: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      display: \"-webkit-box\",\n      WebkitBoxOrient: \"vertical\",\n      //@ts-ignore\n      WebkitLineClamp: \"var(--chakra-line-clamp)\"\n    },\n    property: \"--chakra-line-clamp\"\n  }\n};\n\nexport { typography };\n"],"mappings":"AAAA,SAASA,CAAC,QAAQ,oBAAoB;AACtC,SAASC,kBAAkB,QAAQ,kCAAkC;AAErE,MAAMC,UAAU,GAAG;EACjBC,UAAU,EAAEH,CAAC,CAACI,IAAI,CAAC,YAAY,EAAE,OAAO,CAAC;EACzCC,QAAQ,EAAEL,CAAC,CAACI,IAAI,CAAC,UAAU,EAAE,WAAW,EAAEH,kBAAkB,CAACK,EAAE,CAAC;EAChEC,UAAU,EAAEP,CAAC,CAACI,IAAI,CAAC,YAAY,EAAE,aAAa,CAAC;EAC/CI,UAAU,EAAER,CAAC,CAACI,IAAI,CAAC,YAAY,EAAE,aAAa,CAAC;EAC/CK,aAAa,EAAET,CAAC,CAACI,IAAI,CAAC,eAAe,EAAE,gBAAgB,CAAC;EACxDM,SAAS,EAAE,IAAI;EACfC,SAAS,EAAE,IAAI;EACfC,UAAU,EAAE,IAAI;EAChBC,SAAS,EAAE,IAAI;EACfC,YAAY,EAAE,IAAI;EAClBC,YAAY,EAAE,IAAI;EAClBC,aAAa,EAAE,IAAI;EACnBC,UAAU,EAAE,IAAI;EAChBC,WAAW,EAAE;IACXC,SAASA,CAACC,KAAK,EAAE;MACf,IAAIA,KAAK,KAAK,IAAI,EAAE;QAClB,OAAO;UACLC,QAAQ,EAAE,QAAQ;UAClBN,YAAY,EAAE,UAAU;UACxBE,UAAU,EAAE;QACd,CAAC;MACH;IACF;EACF,CAAC;EACDK,SAAS,EAAE;IACTC,MAAM,EAAE;MACNF,QAAQ,EAAE,QAAQ;MAClBN,YAAY,EAAE,UAAU;MACxBS,OAAO,EAAE,aAAa;MACtBC,eAAe,EAAE,UAAU;MAC3B;MACAC,eAAe,EAAE;IACnB,CAAC;IACDC,QAAQ,EAAE;EACZ;AACF,CAAC;AAED,SAASzB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}