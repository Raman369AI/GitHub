{"ast":null,"code":"'use client';\n\nimport { useCallbackRef, useControllableState, useLatestRef, useUpdateEffect, usePanEvent, mergeRefs } from '@chakra-ui/hooks';\nimport { clampValue, valueToPercent, percentToValue, roundValueToStep, ariaAttr, dataAttr, callAllHandlers } from '@chakra-ui/utils';\nimport { useState, useRef, useId, useCallback, useMemo } from 'react';\nimport { getStyles, getIsReversed } from './slider-utils.mjs';\nfunction useSlider(props) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    ...htmlProps\n  } = props;\n  const onChangeStart = useCallbackRef(onChangeStartProp);\n  const onChangeEnd = useCallbackRef(onChangeEndProp);\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation\n  });\n  const [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? getDefaultValue(min, max),\n    onChange\n  });\n  const [isDragging, setDragging] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(isDisabled || isReadOnly);\n  const tenSteps = (max - min) / 10;\n  const oneStep = step || (max - min) / 100;\n  const value = clampValue(computedValue, min, max);\n  const reversedValue = max - value + min;\n  const trackValue = isReversed ? reversedValue : value;\n  const thumbPercent = valueToPercent(trackValue, min, max);\n  const isVertical = orientation === \"vertical\";\n  const stateRef = useLatestRef({\n    min,\n    max,\n    step,\n    isDisabled,\n    value,\n    isInteractive,\n    isReversed,\n    isVertical,\n    eventSource: null,\n    focusThumbOnChange,\n    orientation\n  });\n  const trackRef = useRef(null);\n  const thumbRef = useRef(null);\n  const rootRef = useRef(null);\n  const reactId = useId();\n  const uuid = idProp ?? reactId;\n  const [thumbId, trackId] = [`slider-thumb-${uuid}`, `slider-track-${uuid}`];\n  const getValueFromPointer = useCallback(event => {\n    if (!trackRef.current) return;\n    const state2 = stateRef.current;\n    state2.eventSource = \"pointer\";\n    const trackRect = trackRef.current.getBoundingClientRect();\n    const {\n      clientX,\n      clientY\n    } = event.touches?.[0] ?? event;\n    const diff = isVertical ? trackRect.bottom - clientY : clientX - trackRect.left;\n    const length = isVertical ? trackRect.height : trackRect.width;\n    let percent = diff / length;\n    if (isReversed) {\n      percent = 1 - percent;\n    }\n    let nextValue = percentToValue(percent, state2.min, state2.max);\n    if (state2.step) {\n      nextValue = parseFloat(roundValueToStep(nextValue, state2.min, state2.step));\n    }\n    nextValue = clampValue(nextValue, state2.min, state2.max);\n    return nextValue;\n  }, [isVertical, isReversed, stateRef]);\n  const constrain = useCallback(value2 => {\n    const state2 = stateRef.current;\n    if (!state2.isInteractive) return;\n    value2 = parseFloat(roundValueToStep(value2, state2.min, oneStep));\n    value2 = clampValue(value2, state2.min, state2.max);\n    setValue(value2);\n  }, [oneStep, setValue, stateRef]);\n  const actions = useMemo(() => ({\n    stepUp(step2 = oneStep) {\n      const next = isReversed ? value - step2 : value + step2;\n      constrain(next);\n    },\n    stepDown(step2 = oneStep) {\n      const next = isReversed ? value + step2 : value - step2;\n      constrain(next);\n    },\n    reset() {\n      constrain(defaultValue || 0);\n    },\n    stepTo(value2) {\n      constrain(value2);\n    }\n  }), [constrain, isReversed, value, oneStep, defaultValue]);\n  const onKeyDown = useCallback(event => {\n    const state2 = stateRef.current;\n    const keyMap = {\n      ArrowRight: () => actions.stepUp(),\n      ArrowUp: () => actions.stepUp(),\n      ArrowLeft: () => actions.stepDown(),\n      ArrowDown: () => actions.stepDown(),\n      PageUp: () => actions.stepUp(tenSteps),\n      PageDown: () => actions.stepDown(tenSteps),\n      Home: () => constrain(state2.min),\n      End: () => constrain(state2.max)\n    };\n    const action = keyMap[event.key];\n    if (action) {\n      event.preventDefault();\n      event.stopPropagation();\n      action(event);\n      state2.eventSource = \"keyboard\";\n    }\n  }, [actions, constrain, tenSteps, stateRef]);\n  const valueText = getAriaValueText?.(value) ?? ariaValueText;\n  const {\n    getThumbStyle,\n    rootStyle,\n    trackStyle,\n    innerTrackStyle\n  } = useMemo(() => {\n    const state2 = stateRef.current;\n    return getStyles({\n      isReversed,\n      orientation: state2.orientation,\n      thumbPercents: [thumbPercent]\n    });\n  }, [isReversed, thumbPercent, stateRef]);\n  const focusThumb = useCallback(() => {\n    const state2 = stateRef.current;\n    if (state2.focusThumbOnChange) {\n      setTimeout(() => thumbRef.current?.focus());\n    }\n  }, [stateRef]);\n  useUpdateEffect(() => {\n    const state2 = stateRef.current;\n    focusThumb();\n    if (state2.eventSource === \"keyboard\") {\n      onChangeEnd?.(state2.value);\n    }\n  }, [value, onChangeEnd]);\n  function setValueFromPointer(event) {\n    const nextValue = getValueFromPointer(event);\n    if (nextValue != null && nextValue !== stateRef.current.value) {\n      setValue(nextValue);\n    }\n  }\n  usePanEvent(rootRef, {\n    onPanSessionStart(event) {\n      const state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setDragging(true);\n      focusThumb();\n      setValueFromPointer(event);\n      onChangeStart?.(state2.value);\n    },\n    onPanSessionEnd() {\n      const state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setDragging(false);\n      onChangeEnd?.(state2.value);\n    },\n    onPan(event) {\n      const state2 = stateRef.current;\n      if (!state2.isInteractive) return;\n      setValueFromPointer(event);\n    }\n  });\n  const getRootProps = useCallback((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ...htmlProps,\n      ref: mergeRefs(ref, rootRef),\n      tabIndex: -1,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"data-focused\": dataAttr(isFocused),\n      style: {\n        ...props2.style,\n        ...rootStyle\n      }\n    };\n  }, [htmlProps, isDisabled, isFocused, rootStyle]);\n  const getTrackProps = useCallback((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref: mergeRefs(ref, trackRef),\n      id: trackId,\n      \"data-disabled\": dataAttr(isDisabled),\n      style: {\n        ...props2.style,\n        ...trackStyle\n      }\n    };\n  }, [isDisabled, trackId, trackStyle]);\n  const getInnerTrackProps = useCallback((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref,\n      style: {\n        ...props2.style,\n        ...innerTrackStyle\n      }\n    };\n  }, [innerTrackStyle]);\n  const getThumbProps = useCallback((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref: mergeRefs(ref, thumbRef),\n      role: \"slider\",\n      tabIndex: isInteractive ? 0 : void 0,\n      id: thumbId,\n      \"data-active\": dataAttr(isDragging),\n      \"aria-valuetext\": valueText,\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-orientation\": orientation,\n      \"aria-disabled\": ariaAttr(isDisabled),\n      \"aria-readonly\": ariaAttr(isReadOnly),\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabel ? void 0 : ariaLabelledBy,\n      style: {\n        ...props2.style,\n        ...getThumbStyle(0)\n      },\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onFocus: callAllHandlers(props2.onFocus, () => setFocused(true)),\n      onBlur: callAllHandlers(props2.onBlur, () => setFocused(false))\n    };\n  }, [isInteractive, thumbId, isDragging, valueText, min, max, value, orientation, isDisabled, isReadOnly, ariaLabel, ariaLabelledBy, getThumbStyle, onKeyDown]);\n  const getMarkerProps = useCallback((props2, ref = null) => {\n    const isInRange = !(props2.value < min || props2.value > max);\n    const isHighlighted = value >= props2.value;\n    const markerPercent = valueToPercent(props2.value, min, max);\n    const markerStyle = {\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      ...orient({\n        orientation,\n        vertical: {\n          bottom: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`\n        },\n        horizontal: {\n          left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`\n        }\n      })\n    };\n    return {\n      ...props2,\n      ref,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(!isInRange),\n      \"data-highlighted\": dataAttr(isHighlighted),\n      style: {\n        ...props2.style,\n        ...markerStyle\n      }\n    };\n  }, [isDisabled, isReversed, max, min, orientation, value]);\n  const getInputProps = useCallback((props2 = {}, ref = null) => {\n    return {\n      ...props2,\n      ref,\n      type: \"hidden\",\n      value,\n      name\n    };\n  }, [name, value]);\n  const state = {\n    value,\n    isFocused,\n    isDragging\n  };\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps\n  };\n}\nfunction orient(options) {\n  const {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nfunction getDefaultValue(min, max) {\n  return max < min ? min : min + (max - min) / 2;\n}\nexport { useSlider };","map":{"version":3,"names":["useCallbackRef","useControllableState","useLatestRef","useUpdateEffect","usePanEvent","mergeRefs","clampValue","valueToPercent","percentToValue","roundValueToStep","ariaAttr","dataAttr","callAllHandlers","useState","useRef","useId","useCallback","useMemo","getStyles","getIsReversed","useSlider","props","min","max","onChange","value","valueProp","defaultValue","isReversed","isReversedProp","direction","orientation","id","idProp","isDisabled","isReadOnly","onChangeStart","onChangeStartProp","onChangeEnd","onChangeEndProp","step","getAriaValueText","getAriaValueTextProp","ariaValueText","ariaLabel","ariaLabelledBy","name","focusThumbOnChange","htmlProps","computedValue","setValue","getDefaultValue","isDragging","setDragging","isFocused","setFocused","isInteractive","tenSteps","oneStep","reversedValue","trackValue","thumbPercent","isVertical","stateRef","eventSource","trackRef","thumbRef","rootRef","reactId","uuid","thumbId","trackId","getValueFromPointer","event","current","state2","trackRect","getBoundingClientRect","clientX","clientY","touches","diff","bottom","left","length","height","width","percent","nextValue","parseFloat","constrain","value2","actions","stepUp","step2","next","stepDown","reset","stepTo","onKeyDown","keyMap","ArrowRight","ArrowUp","ArrowLeft","ArrowDown","PageUp","PageDown","Home","End","action","key","preventDefault","stopPropagation","valueText","getThumbStyle","rootStyle","trackStyle","innerTrackStyle","thumbPercents","focusThumb","setTimeout","focus","setValueFromPointer","onPanSessionStart","onPanSessionEnd","onPan","getRootProps","props2","ref","tabIndex","style","getTrackProps","getInnerTrackProps","getThumbProps","role","onFocus","onBlur","getMarkerProps","isInRange","isHighlighted","markerPercent","markerStyle","position","pointerEvents","orient","vertical","horizontal","getInputProps","type","state","options"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/react/dist/esm/slider/use-slider.mjs"],"sourcesContent":["'use client';\nimport { useCallbackRef, useControllableState, useLatestRef, useUpdateEffect, usePanEvent, mergeRefs } from '@chakra-ui/hooks';\nimport { clampValue, valueToPercent, percentToValue, roundValueToStep, ariaAttr, dataAttr, callAllHandlers } from '@chakra-ui/utils';\nimport { useState, useRef, useId, useCallback, useMemo } from 'react';\nimport { getStyles, getIsReversed } from './slider-utils.mjs';\n\nfunction useSlider(props) {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    value: valueProp,\n    defaultValue,\n    isReversed: isReversedProp,\n    direction = \"ltr\",\n    orientation = \"horizontal\",\n    id: idProp,\n    isDisabled,\n    isReadOnly,\n    onChangeStart: onChangeStartProp,\n    onChangeEnd: onChangeEndProp,\n    step = 1,\n    getAriaValueText: getAriaValueTextProp,\n    \"aria-valuetext\": ariaValueText,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    name,\n    focusThumbOnChange = true,\n    ...htmlProps\n  } = props;\n  const onChangeStart = useCallbackRef(onChangeStartProp);\n  const onChangeEnd = useCallbackRef(onChangeEndProp);\n  const getAriaValueText = useCallbackRef(getAriaValueTextProp);\n  const isReversed = getIsReversed({\n    isReversed: isReversedProp,\n    direction,\n    orientation\n  });\n  const [computedValue, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue ?? getDefaultValue(min, max),\n    onChange\n  });\n  const [isDragging, setDragging] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const isInteractive = !(isDisabled || isReadOnly);\n  const tenSteps = (max - min) / 10;\n  const oneStep = step || (max - min) / 100;\n  const value = clampValue(computedValue, min, max);\n  const reversedValue = max - value + min;\n  const trackValue = isReversed ? reversedValue : value;\n  const thumbPercent = valueToPercent(trackValue, min, max);\n  const isVertical = orientation === \"vertical\";\n  const stateRef = useLatestRef({\n    min,\n    max,\n    step,\n    isDisabled,\n    value,\n    isInteractive,\n    isReversed,\n    isVertical,\n    eventSource: null,\n    focusThumbOnChange,\n    orientation\n  });\n  const trackRef = useRef(null);\n  const thumbRef = useRef(null);\n  const rootRef = useRef(null);\n  const reactId = useId();\n  const uuid = idProp ?? reactId;\n  const [thumbId, trackId] = [`slider-thumb-${uuid}`, `slider-track-${uuid}`];\n  const getValueFromPointer = useCallback(\n    (event) => {\n      if (!trackRef.current)\n        return;\n      const state2 = stateRef.current;\n      state2.eventSource = \"pointer\";\n      const trackRect = trackRef.current.getBoundingClientRect();\n      const { clientX, clientY } = event.touches?.[0] ?? event;\n      const diff = isVertical ? trackRect.bottom - clientY : clientX - trackRect.left;\n      const length = isVertical ? trackRect.height : trackRect.width;\n      let percent = diff / length;\n      if (isReversed) {\n        percent = 1 - percent;\n      }\n      let nextValue = percentToValue(percent, state2.min, state2.max);\n      if (state2.step) {\n        nextValue = parseFloat(\n          roundValueToStep(nextValue, state2.min, state2.step)\n        );\n      }\n      nextValue = clampValue(nextValue, state2.min, state2.max);\n      return nextValue;\n    },\n    [isVertical, isReversed, stateRef]\n  );\n  const constrain = useCallback(\n    (value2) => {\n      const state2 = stateRef.current;\n      if (!state2.isInteractive)\n        return;\n      value2 = parseFloat(roundValueToStep(value2, state2.min, oneStep));\n      value2 = clampValue(value2, state2.min, state2.max);\n      setValue(value2);\n    },\n    [oneStep, setValue, stateRef]\n  );\n  const actions = useMemo(\n    () => ({\n      stepUp(step2 = oneStep) {\n        const next = isReversed ? value - step2 : value + step2;\n        constrain(next);\n      },\n      stepDown(step2 = oneStep) {\n        const next = isReversed ? value + step2 : value - step2;\n        constrain(next);\n      },\n      reset() {\n        constrain(defaultValue || 0);\n      },\n      stepTo(value2) {\n        constrain(value2);\n      }\n    }),\n    [constrain, isReversed, value, oneStep, defaultValue]\n  );\n  const onKeyDown = useCallback(\n    (event) => {\n      const state2 = stateRef.current;\n      const keyMap = {\n        ArrowRight: () => actions.stepUp(),\n        ArrowUp: () => actions.stepUp(),\n        ArrowLeft: () => actions.stepDown(),\n        ArrowDown: () => actions.stepDown(),\n        PageUp: () => actions.stepUp(tenSteps),\n        PageDown: () => actions.stepDown(tenSteps),\n        Home: () => constrain(state2.min),\n        End: () => constrain(state2.max)\n      };\n      const action = keyMap[event.key];\n      if (action) {\n        event.preventDefault();\n        event.stopPropagation();\n        action(event);\n        state2.eventSource = \"keyboard\";\n      }\n    },\n    [actions, constrain, tenSteps, stateRef]\n  );\n  const valueText = getAriaValueText?.(value) ?? ariaValueText;\n  const { getThumbStyle, rootStyle, trackStyle, innerTrackStyle } = useMemo(() => {\n    const state2 = stateRef.current;\n    return getStyles({\n      isReversed,\n      orientation: state2.orientation,\n      thumbPercents: [thumbPercent]\n    });\n  }, [isReversed, thumbPercent, stateRef]);\n  const focusThumb = useCallback(() => {\n    const state2 = stateRef.current;\n    if (state2.focusThumbOnChange) {\n      setTimeout(() => thumbRef.current?.focus());\n    }\n  }, [stateRef]);\n  useUpdateEffect(() => {\n    const state2 = stateRef.current;\n    focusThumb();\n    if (state2.eventSource === \"keyboard\") {\n      onChangeEnd?.(state2.value);\n    }\n  }, [value, onChangeEnd]);\n  function setValueFromPointer(event) {\n    const nextValue = getValueFromPointer(event);\n    if (nextValue != null && nextValue !== stateRef.current.value) {\n      setValue(nextValue);\n    }\n  }\n  usePanEvent(rootRef, {\n    onPanSessionStart(event) {\n      const state2 = stateRef.current;\n      if (!state2.isInteractive)\n        return;\n      setDragging(true);\n      focusThumb();\n      setValueFromPointer(event);\n      onChangeStart?.(state2.value);\n    },\n    onPanSessionEnd() {\n      const state2 = stateRef.current;\n      if (!state2.isInteractive)\n        return;\n      setDragging(false);\n      onChangeEnd?.(state2.value);\n    },\n    onPan(event) {\n      const state2 = stateRef.current;\n      if (!state2.isInteractive)\n        return;\n      setValueFromPointer(event);\n    }\n  });\n  const getRootProps = useCallback(\n    (props2 = {}, ref = null) => {\n      return {\n        ...props2,\n        ...htmlProps,\n        ref: mergeRefs(ref, rootRef),\n        tabIndex: -1,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"data-focused\": dataAttr(isFocused),\n        style: {\n          ...props2.style,\n          ...rootStyle\n        }\n      };\n    },\n    [htmlProps, isDisabled, isFocused, rootStyle]\n  );\n  const getTrackProps = useCallback(\n    (props2 = {}, ref = null) => {\n      return {\n        ...props2,\n        ref: mergeRefs(ref, trackRef),\n        id: trackId,\n        \"data-disabled\": dataAttr(isDisabled),\n        style: {\n          ...props2.style,\n          ...trackStyle\n        }\n      };\n    },\n    [isDisabled, trackId, trackStyle]\n  );\n  const getInnerTrackProps = useCallback(\n    (props2 = {}, ref = null) => {\n      return {\n        ...props2,\n        ref,\n        style: {\n          ...props2.style,\n          ...innerTrackStyle\n        }\n      };\n    },\n    [innerTrackStyle]\n  );\n  const getThumbProps = useCallback(\n    (props2 = {}, ref = null) => {\n      return {\n        ...props2,\n        ref: mergeRefs(ref, thumbRef),\n        role: \"slider\",\n        tabIndex: isInteractive ? 0 : void 0,\n        id: thumbId,\n        \"data-active\": dataAttr(isDragging),\n        \"aria-valuetext\": valueText,\n        \"aria-valuemin\": min,\n        \"aria-valuemax\": max,\n        \"aria-valuenow\": value,\n        \"aria-orientation\": orientation,\n        \"aria-disabled\": ariaAttr(isDisabled),\n        \"aria-readonly\": ariaAttr(isReadOnly),\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabel ? void 0 : ariaLabelledBy,\n        style: {\n          ...props2.style,\n          ...getThumbStyle(0)\n        },\n        onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n        onFocus: callAllHandlers(props2.onFocus, () => setFocused(true)),\n        onBlur: callAllHandlers(props2.onBlur, () => setFocused(false))\n      };\n    },\n    [\n      isInteractive,\n      thumbId,\n      isDragging,\n      valueText,\n      min,\n      max,\n      value,\n      orientation,\n      isDisabled,\n      isReadOnly,\n      ariaLabel,\n      ariaLabelledBy,\n      getThumbStyle,\n      onKeyDown\n    ]\n  );\n  const getMarkerProps = useCallback(\n    (props2, ref = null) => {\n      const isInRange = !(props2.value < min || props2.value > max);\n      const isHighlighted = value >= props2.value;\n      const markerPercent = valueToPercent(props2.value, min, max);\n      const markerStyle = {\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        ...orient({\n          orientation,\n          vertical: {\n            bottom: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`\n          },\n          horizontal: {\n            left: isReversed ? `${100 - markerPercent}%` : `${markerPercent}%`\n          }\n        })\n      };\n      return {\n        ...props2,\n        ref,\n        role: \"presentation\",\n        \"aria-hidden\": true,\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(!isInRange),\n        \"data-highlighted\": dataAttr(isHighlighted),\n        style: {\n          ...props2.style,\n          ...markerStyle\n        }\n      };\n    },\n    [isDisabled, isReversed, max, min, orientation, value]\n  );\n  const getInputProps = useCallback(\n    (props2 = {}, ref = null) => {\n      return {\n        ...props2,\n        ref,\n        type: \"hidden\",\n        value,\n        name\n      };\n    },\n    [name, value]\n  );\n  const state = { value, isFocused, isDragging };\n  return {\n    state,\n    actions,\n    getRootProps,\n    getTrackProps,\n    getInnerTrackProps,\n    getThumbProps,\n    getMarkerProps,\n    getInputProps\n  };\n}\nfunction orient(options) {\n  const { orientation, vertical, horizontal } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\nfunction getDefaultValue(min, max) {\n  return max < min ? min : min + (max - min) / 2;\n}\n\nexport { useSlider };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}