{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect } from 'react';\nconst useUpdateEffect = (effect, deps) => {\n  const renderCycleRef = useRef(false);\n  const effectCycleRef = useRef(false);\n  useEffect(() => {\n    const isMounted = renderCycleRef.current;\n    const shouldRun = isMounted && effectCycleRef.current;\n    if (shouldRun) {\n      return effect();\n    }\n    effectCycleRef.current = true;\n  }, deps);\n  useEffect(() => {\n    renderCycleRef.current = true;\n    return () => {\n      renderCycleRef.current = false;\n    };\n  }, []);\n};\nexport { useUpdateEffect };","map":{"version":3,"names":["useRef","useEffect","useUpdateEffect","effect","deps","renderCycleRef","effectCycleRef","isMounted","current","shouldRun"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/hooks/dist/esm/use-update-effect.mjs"],"sourcesContent":["'use client';\nimport { useRef, useEffect } from 'react';\n\nconst useUpdateEffect = (effect, deps) => {\n  const renderCycleRef = useRef(false);\n  const effectCycleRef = useRef(false);\n  useEffect(() => {\n    const isMounted = renderCycleRef.current;\n    const shouldRun = isMounted && effectCycleRef.current;\n    if (shouldRun) {\n      return effect();\n    }\n    effectCycleRef.current = true;\n  }, deps);\n  useEffect(() => {\n    renderCycleRef.current = true;\n    return () => {\n      renderCycleRef.current = false;\n    };\n  }, []);\n};\n\nexport { useUpdateEffect };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAEzC,MAAMC,eAAe,GAAGA,CAACC,MAAM,EAAEC,IAAI,KAAK;EACxC,MAAMC,cAAc,GAAGL,MAAM,CAAC,KAAK,CAAC;EACpC,MAAMM,cAAc,GAAGN,MAAM,CAAC,KAAK,CAAC;EACpCC,SAAS,CAAC,MAAM;IACd,MAAMM,SAAS,GAAGF,cAAc,CAACG,OAAO;IACxC,MAAMC,SAAS,GAAGF,SAAS,IAAID,cAAc,CAACE,OAAO;IACrD,IAAIC,SAAS,EAAE;MACb,OAAON,MAAM,CAAC,CAAC;IACjB;IACAG,cAAc,CAACE,OAAO,GAAG,IAAI;EAC/B,CAAC,EAAEJ,IAAI,CAAC;EACRH,SAAS,CAAC,MAAM;IACdI,cAAc,CAACG,OAAO,GAAG,IAAI;IAC7B,OAAO,MAAM;MACXH,cAAc,CAACG,OAAO,GAAG,KAAK;IAChC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;AACR,CAAC;AAED,SAASN,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}