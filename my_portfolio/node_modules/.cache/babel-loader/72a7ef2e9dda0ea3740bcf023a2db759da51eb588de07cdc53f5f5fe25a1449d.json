{"ast":null,"code":"function replaceWhiteSpace(value, replaceValue = \"-\") {\n  return value.replace(/\\s+/g, replaceValue);\n}\nfunction escape(value) {\n  const valueStr = replaceWhiteSpace(value.toString());\n  return escapeSymbol(escapeDot(valueStr));\n}\nfunction escapeDot(value) {\n  if (value.includes(\"\\\\.\")) return value;\n  const isDecimal = !Number.isInteger(parseFloat(value.toString()));\n  return isDecimal ? value.replace(\".\", `\\\\.`) : value;\n}\nfunction escapeSymbol(value) {\n  return value.replace(/[!-,/:-@[-^`{-~]/g, \"\\\\$&\");\n}\nfunction addPrefix(value, prefix = \"\") {\n  return [prefix, value].filter(Boolean).join(\"-\");\n}\nfunction toVarReference(name, fallback) {\n  return `var(${name}${fallback ? `, ${fallback}` : \"\"})`;\n}\nfunction toVarDefinition(value, prefix = \"\") {\n  return escape(`--${addPrefix(value, prefix)}`);\n}\nfunction cssVar(name, fallback, cssVarPrefix) {\n  const cssVariable = toVarDefinition(name, cssVarPrefix);\n  return {\n    variable: cssVariable,\n    reference: toVarReference(cssVariable, fallback)\n  };\n}\nfunction defineCssVars(scope, keys) {\n  const vars = {};\n  for (const key of keys) {\n    if (Array.isArray(key)) {\n      const [name, fallback] = key;\n      vars[name] = cssVar(`${scope}-${name}`, fallback);\n      continue;\n    }\n    vars[key] = cssVar(`${scope}-${key}`);\n  }\n  return vars;\n}\nexport { addPrefix, cssVar, defineCssVars, toVarDefinition, toVarReference };","map":{"version":3,"names":["replaceWhiteSpace","value","replaceValue","replace","escape","valueStr","toString","escapeSymbol","escapeDot","includes","isDecimal","Number","isInteger","parseFloat","addPrefix","prefix","filter","Boolean","join","toVarReference","name","fallback","toVarDefinition","cssVar","cssVarPrefix","cssVariable","variable","reference","defineCssVars","scope","keys","vars","key","Array","isArray"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/styled-system/dist/esm/create-theme-vars/css-var.mjs"],"sourcesContent":["function replaceWhiteSpace(value, replaceValue = \"-\") {\n  return value.replace(/\\s+/g, replaceValue);\n}\nfunction escape(value) {\n  const valueStr = replaceWhiteSpace(value.toString());\n  return escapeSymbol(escapeDot(valueStr));\n}\nfunction escapeDot(value) {\n  if (value.includes(\"\\\\.\"))\n    return value;\n  const isDecimal = !Number.isInteger(parseFloat(value.toString()));\n  return isDecimal ? value.replace(\".\", `\\\\.`) : value;\n}\nfunction escapeSymbol(value) {\n  return value.replace(/[!-,/:-@[-^`{-~]/g, \"\\\\$&\");\n}\nfunction addPrefix(value, prefix = \"\") {\n  return [prefix, value].filter(Boolean).join(\"-\");\n}\nfunction toVarReference(name, fallback) {\n  return `var(${name}${fallback ? `, ${fallback}` : \"\"})`;\n}\nfunction toVarDefinition(value, prefix = \"\") {\n  return escape(`--${addPrefix(value, prefix)}`);\n}\nfunction cssVar(name, fallback, cssVarPrefix) {\n  const cssVariable = toVarDefinition(name, cssVarPrefix);\n  return {\n    variable: cssVariable,\n    reference: toVarReference(cssVariable, fallback)\n  };\n}\nfunction defineCssVars(scope, keys) {\n  const vars = {};\n  for (const key of keys) {\n    if (Array.isArray(key)) {\n      const [name, fallback] = key;\n      vars[name] = cssVar(`${scope}-${name}`, fallback);\n      continue;\n    }\n    vars[key] = cssVar(`${scope}-${key}`);\n  }\n  return vars;\n}\n\nexport { addPrefix, cssVar, defineCssVars, toVarDefinition, toVarReference };\n"],"mappings":"AAAA,SAASA,iBAAiBA,CAACC,KAAK,EAAEC,YAAY,GAAG,GAAG,EAAE;EACpD,OAAOD,KAAK,CAACE,OAAO,CAAC,MAAM,EAAED,YAAY,CAAC;AAC5C;AACA,SAASE,MAAMA,CAACH,KAAK,EAAE;EACrB,MAAMI,QAAQ,GAAGL,iBAAiB,CAACC,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC;EACpD,OAAOC,YAAY,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;AAC1C;AACA,SAASG,SAASA,CAACP,KAAK,EAAE;EACxB,IAAIA,KAAK,CAACQ,QAAQ,CAAC,KAAK,CAAC,EACvB,OAAOR,KAAK;EACd,MAAMS,SAAS,GAAG,CAACC,MAAM,CAACC,SAAS,CAACC,UAAU,CAACZ,KAAK,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjE,OAAOI,SAAS,GAAGT,KAAK,CAACE,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,GAAGF,KAAK;AACtD;AACA,SAASM,YAAYA,CAACN,KAAK,EAAE;EAC3B,OAAOA,KAAK,CAACE,OAAO,CAAC,mBAAmB,EAAE,MAAM,CAAC;AACnD;AACA,SAASW,SAASA,CAACb,KAAK,EAAEc,MAAM,GAAG,EAAE,EAAE;EACrC,OAAO,CAACA,MAAM,EAAEd,KAAK,CAAC,CAACe,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAClD;AACA,SAASC,cAAcA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EACtC,OAAO,OAAOD,IAAI,GAAGC,QAAQ,GAAG,KAAKA,QAAQ,EAAE,GAAG,EAAE,GAAG;AACzD;AACA,SAASC,eAAeA,CAACrB,KAAK,EAAEc,MAAM,GAAG,EAAE,EAAE;EAC3C,OAAOX,MAAM,CAAC,KAAKU,SAAS,CAACb,KAAK,EAAEc,MAAM,CAAC,EAAE,CAAC;AAChD;AACA,SAASQ,MAAMA,CAACH,IAAI,EAAEC,QAAQ,EAAEG,YAAY,EAAE;EAC5C,MAAMC,WAAW,GAAGH,eAAe,CAACF,IAAI,EAAEI,YAAY,CAAC;EACvD,OAAO;IACLE,QAAQ,EAAED,WAAW;IACrBE,SAAS,EAAER,cAAc,CAACM,WAAW,EAAEJ,QAAQ;EACjD,CAAC;AACH;AACA,SAASO,aAAaA,CAACC,KAAK,EAAEC,IAAI,EAAE;EAClC,MAAMC,IAAI,GAAG,CAAC,CAAC;EACf,KAAK,MAAMC,GAAG,IAAIF,IAAI,EAAE;IACtB,IAAIG,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,EAAE;MACtB,MAAM,CAACZ,IAAI,EAAEC,QAAQ,CAAC,GAAGW,GAAG;MAC5BD,IAAI,CAACX,IAAI,CAAC,GAAGG,MAAM,CAAC,GAAGM,KAAK,IAAIT,IAAI,EAAE,EAAEC,QAAQ,CAAC;MACjD;IACF;IACAU,IAAI,CAACC,GAAG,CAAC,GAAGT,MAAM,CAAC,GAAGM,KAAK,IAAIG,GAAG,EAAE,CAAC;EACvC;EACA,OAAOD,IAAI;AACb;AAEA,SAASjB,SAAS,EAAES,MAAM,EAAEK,aAAa,EAAEN,eAAe,EAAEH,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}