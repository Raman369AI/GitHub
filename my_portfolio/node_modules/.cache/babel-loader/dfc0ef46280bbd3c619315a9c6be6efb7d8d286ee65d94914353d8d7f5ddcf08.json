{"ast":null,"code":"function isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isNotNumber(value) {\n  return typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value);\n}\nfunction isNumeric(value) {\n  return value != null && value - parseFloat(value) + 1 >= 0;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isEmptyArray(value) {\n  return isArray(value) && value.length === 0;\n}\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction isDefined(value) {\n  return typeof value !== \"undefined\" && value !== void 0;\n}\nfunction isUndefined(value) {\n  return typeof value === \"undefined\" || value === void 0;\n}\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !isArray(value);\n}\nfunction isEmptyObject(value) {\n  return isObject(value) && Object.keys(value).length === 0;\n}\nfunction isNull(value) {\n  return value == null;\n}\nfunction isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\nfunction isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n}\nfunction isEmpty(value) {\n  if (isArray(value)) return isEmptyArray(value);\n  if (isObject(value)) return isEmptyObject(value);\n  if (value == null || value === \"\") return true;\n  return false;\n}\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nexport { isArray, isCssVar, isDefined, isEmpty, isEmptyArray, isEmptyObject, isFunction, isInputEvent, isNotNumber, isNull, isNumber, isNumeric, isObject, isRefObject, isString, isUndefined };","map":{"version":3,"names":["isNumber","value","isNotNumber","Number","isNaN","isFinite","isNumeric","parseFloat","isArray","Array","isEmptyArray","length","isFunction","isDefined","isUndefined","isObject","type","isEmptyObject","Object","keys","isNull","isString","prototype","toString","call","isCssVar","test","isEmpty","isRefObject","val","isInputEvent","target"],"sources":["/home/coder/project/reactlab/node_modules/@chakra-ui/utils/dist/esm/is.mjs"],"sourcesContent":["function isNumber(value) {\n  return typeof value === \"number\";\n}\nfunction isNotNumber(value) {\n  return typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value);\n}\nfunction isNumeric(value) {\n  return value != null && value - parseFloat(value) + 1 >= 0;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isEmptyArray(value) {\n  return isArray(value) && value.length === 0;\n}\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction isDefined(value) {\n  return typeof value !== \"undefined\" && value !== void 0;\n}\nfunction isUndefined(value) {\n  return typeof value === \"undefined\" || value === void 0;\n}\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !isArray(value);\n}\nfunction isEmptyObject(value) {\n  return isObject(value) && Object.keys(value).length === 0;\n}\nfunction isNull(value) {\n  return value == null;\n}\nfunction isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\nfunction isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n}\nfunction isEmpty(value) {\n  if (isArray(value))\n    return isEmptyArray(value);\n  if (isObject(value))\n    return isEmptyObject(value);\n  if (value == null || value === \"\")\n    return true;\n  return false;\n}\nfunction isRefObject(val) {\n  return \"current\" in val;\n}\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\n\nexport { isArray, isCssVar, isDefined, isEmpty, isEmptyArray, isEmptyObject, isFunction, isInputEvent, isNotNumber, isNull, isNumber, isNumeric, isObject, isRefObject, isString, isUndefined };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}